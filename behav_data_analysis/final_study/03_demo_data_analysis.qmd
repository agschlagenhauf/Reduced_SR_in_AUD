---
title: "Demographic and psychometric data"
doi: "https://doi.org/10.17605/OSF.IO/9TUZE"
author: "Milena Musial"
date: 01/29/2025
format: html
editor: visual
toc: TRUE
code-fold: FALSE
warning: FALSE
number-sections: TRUE
embed-resources: true
execute: 
  warning: FALSE
editor_options: 
  chunk_output_type: console
---

```{r message=FALSE}
# Set up
rm(list = ls(all = TRUE))

# Load packages
packages <- c("ggplot2", "dplyr", "tidyr", "kableExtra", "gmodels", "lme4", "sjPlot", "lmerTest", "viridis")
#install.packages(packages)
lapply(packages, library, character.only = TRUE)

# define paths
#demo_path <- "~/work/group_folder/B01_FP2_WP3/WP3_DATA/FINAL_STUDY/RDFs"
demo_path <- "~/Library/CloudStorage/OneDrive-Charité-UniversitätsmedizinBerlin/PhD/04_B01/WP3/WP3_DATA/FINAL_STUDY/RDFs"

# read dfs
load(file.path(demo_path, "demo_psych_data_included.RData"))

demo_psych <- demo_psych %>%
  mutate(group_version = paste(demo_psych$group, demo_psych$version))

contrasts(demo_psych$group) <- contr.treatment(2)
contrasts(demo_psych$version) <- contr.treatment(2)
```

# Demographic data

## Summary table

```{r}
demo_table <- demo_psych %>%
  group_by(group, version) %>%
  summarise(
    n = dplyr::n(),
    mean_age = mean(age, na.rm = TRUE),
    sd_age = sd(age, na.rm = TRUE),
    male_count = sum(sex == "male", na.rm = TRUE),
    female_count = sum(sex == "female", na.rm = TRUE),
    othersex_count = sum(sex == "other", na.rm = TRUE),
    sample_GER = sum(sample == "GER", na.rm = TRUE),
    sample_EU = sum(sample == "EU", na.rm = TRUE),
    sample_UK = sum(sample == "UK", na.rm = TRUE),
    native_language_eng = sum(native_language == "English", na.rm = TRUE),
    native_language_ger = sum(native_language == "German", na.rm = TRUE),
    native_language_other = sum(native_language %in% c("Arabic", "Bengali", "Cantonese", 
                                                       "Chinese", "Dutch", "Greek",
                                                       "Hindi", "Hungarian", "Italian",
                                                       "Korean", "Polish", "Portuguese",
                                                       "Romanian", "Russian", "Serbian",
                                                       "Spanish", "Tagalog-Filipino", "Tamil",
                                                       "Turkish", "Ukrainian", "Urdu",
                                                       "Vietnamese", "Welsh", "Afrikaans",
                                                       "Albanian", "Bulgarian", "Croatian",
                                                       "French", "Indonesian", "Latvian",
                                                       "Lithuanian", "Mandarin", "Slovak",
                                                       "Slovenian", "Thai"), na.rm = TRUE),
    ethnicity_asian = sum(ethnicity == "Asian", na.rm = TRUE),
    ethnicity_black = sum(ethnicity == "Black", na.rm = TRUE),
    ethnicity_white = sum(ethnicity == "White", na.rm = TRUE),
    ethnicity_mixed = sum(ethnicity == "Mixed", na.rm = TRUE),
    ethnicity_other = sum(ethnicity == "Other", na.rm = TRUE),
    student_count = sum(student == "Yes", na.rm = TRUE),
    nostudent_count = sum(student == "No", na.rm = TRUE),
    employed_count = sum(employment %in% c("Full-Time", "Part-Time"), na.rm = TRUE),
    jobseeking_count = sum(employment %in% c("Unemployed (and job seeking)", "Due to start a new job within the next month"), na.rm = TRUE),
    non_working_count = sum(employment %in% c("Not in paid work (e.g. homemaker', 'retired or disabled)"), na.rm = TRUE),
    other_working_count = sum(employment %in% c("Other"), na.rm = TRUE),
    .groups = "drop"
  ) 

demo_table %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

## Age

```{r}
model_age <- lm(age ~ group*version, data=demo_psych)
tab_model(model_age, show.stat = T, show.df = T)
```

## Sex

```{r}
table_sex <- table(demo_psych$group_version, demo_psych$sex)
table_sex_group <- table(demo_psych$group, demo_psych$sex)
table_sex_version <- table(demo_psych$version, demo_psych$sex)

chisq.test(table_sex, simulate.p.value = T)
chisq.test(table_sex_group, simulate.p.value = T)
chisq.test(table_sex_version, simulate.p.value = T)
```

## Sample

```{r}
table_sample <- table(demo_psych$group_version, demo_psych$sample)
table_sample_group <- table(demo_psych$group, demo_psych$sample)
table_sample_version <- table(demo_psych$version, demo_psych$sample)

chisq.test(table_sample)
chisq.test(table_sample_group)
chisq.test(table_sample_version)
```

## Native language

```{r}
lang_df <- demo_psych %>%
  mutate(native_language = as.character(native_language)) %>%
  mutate(native_language = ifelse(native_language %in% c("Arabic", "Bengali", "Cantonese", 
                                                       "Chinese", "Dutch", "Greek",
                                                       "Hindi", "Hungarian", "Italian",
                                                       "Korean", "Polish", "Portuguese",
                                                       "Romanian", "Russian", "Serbian",
                                                       "Spanish", "Tagalog-Filipino", "Tamil",
                                                       "Turkish", "Ukrainian", "Urdu",
                                                       "Vietnamese", "Welsh", "Afrikaans",
                                                       "Albanian", "Bulgarian", "Croatian",
                                                       "French", "Indonesian", "Latvian",
                                                       "Lithuanian", "Mandarin", "Slovak",
                                                       "Slovenian", "Thai"), 
                                  "other", native_language)) %>%
  mutate(native_language = as.factor(native_language))

table_lang <- table(lang_df$group_version, lang_df$native_language)
table_lang_group <- table(lang_df$group, lang_df$native_language)
table_lang_version <- table(lang_df$version, lang_df$native_language)

chisq.test(table_lang)
chisq.test(table_lang_group)
chisq.test(table_lang_version)
```

## Ethnicity

```{r}
table_ethnicity <- table(demo_psych$group_version, demo_psych$ethnicity)
table_ethnicity_group <- table(demo_psych$group, demo_psych$ethnicity)
table_ethnicity_version <- table(demo_psych$version, demo_psych$ethnicity)

chisq.test(table_ethnicity, simulate.p.value = T)
chisq.test(table_ethnicity_group, simulate.p.value = T)
chisq.test(table_ethnicity_version, simulate.p.value = T)
```

## Student status

```{r}
table_student <- table(demo_psych$group_version, demo_psych$student)
table_student_group <- table(demo_psych$group, demo_psych$student)
table_student_version <- table(demo_psych$version, demo_psych$student)

chisq.test(table_student)
chisq.test(table_student_group)
chisq.test(table_student_version)
```

## Employment status

```{r}
employ_df <- demo_psych %>%
  mutate(employment = as.character(employment)) %>%
  mutate(employment = ifelse(employment %in% c("Full-Time", "Part-Time"), "employed", 
                             ifelse(employment %in% c("Unemployed (and job seeking)", "Due to start a new job within the next month"), "unemployed",
                                    ifelse(employment %in% c("Not in paid work (e.g. homemaker', 'retired or disabled)"), "not in paid work", 
                                           ifelse(employment %in% c("Other"), "other", NA))))) %>%
  mutate(employment = as.factor(employment))

table_employ <- table(employ_df$group_version, employ_df$employment)
table_employ_group <- table(employ_df$group, employ_df$employment)
table_employ_version <- table(employ_df$version, employ_df$employment)

chisq.test(table_employ, simulate.p.value = F)
chisq.test(table_employ_group, simulate.p.value = F)
chisq.test(table_employ_version, simulate.p.value = F)
```

# Psychometric data

## Summary table

```{r}
psych_table <- demo_psych %>%
  group_by(group, version) %>%
  summarise(
    mean_audit = mean(audit_sum_pre, na.rm = TRUE),
    sd_audit = sd(audit_sum_pre, na.rm = TRUE),
    mean_aud = mean(aud_sum, na.rm = TRUE),
    sd_aud = sd(aud_sum, na.rm = TRUE),
    sum_aud_group = sum(aud_group == "yes"),
    sum_noaud_group = sum(aud_group == "no"),
    mean_drinkingdays = mean(drinking_days, na.rm = TRUE),
    sd_drinkingdays = sd(drinking_days, na.rm = TRUE),
    mean_dailydrinks = mean(drinks_per_day, na.rm = TRUE),
    sd_dailydrinks = sd(drinks_per_day, na.rm = TRUE),
    mean_bingedays = mean(binge_days, na.rm = TRUE),
    sd_bingedays = sd(binge_days, na.rm = TRUE),
    nosmoker_count = sum(nicotine_past3months %in% c("never"), na.rm = TRUE),
    smoker_count = sum(nicotine_past3months %in% c("less than 1x per month",
                                                   "1-3 x per month", 
                                                   "1-4 x per week", 
                                                   "5-7 x per week"), na.rm = TRUE),
    nocannabis_user_count = sum(cannabis_past3months %in% c("never"), na.rm = TRUE),
    cannabis_user_count = sum(cannabis_past3months %in% c("less than 1x per month", 
                                                          "1-3 x per month",
                                                          "1-4 x per week", 
                                                          "5-7 x per week"), na.rm = TRUE),
    nodrug_user_count = sum(drugs_past3months %in% c("never"), na.rm = TRUE),
    drug_user_count = sum(drugs_past3months %in% c("less than 1x per month", 
                                                   "1-3 x per month", 
                                                   "1-4 x per week", 
                                                   "5-7 x per week"), na.rm = TRUE),
    mean_casa_nonvol = mean(casa_gf_nonvolitional, na.rm = TRUE),
    sd_casa_nonvol = sd(casa_gf_nonvolitional, na.rm = TRUE),
    mean_casa_unaware = mean(casa_gf_unaware, na.rm = TRUE),
    sd_casa_unaware = sd(casa_gf_unaware, na.rm = TRUE),
    mean_uppsp = mean(uppsp_total, na.rm = TRUE),
    sd_uppsp = sd(uppsp_total, na.rm = TRUE),
    mean_oci = mean(oci_total, na.rm = TRUE),
    sd_oci = sd(oci_total, na.rm = TRUE),
    mean_dmq_social = mean(dmq_social, na.rm = TRUE),
    sd_dmq_social = sd(dmq_social, na.rm = TRUE),
    mean_dmq_enhancement = mean(dmq_enhancement, na.rm = TRUE),
    sd_dmq_enhancement = sd(dmq_enhancement, na.rm = TRUE),
    mean_dmq_coping = mean(dmq_coping, na.rm = TRUE),
    sd_dmq_coping = sd(dmq_coping, na.rm = TRUE),
    mean_dmq_conformity = mean(dmq_conformity, na.rm = TRUE),
    sd_dmq_conformity = sd(dmq_conformity, na.rm = TRUE),
    .groups = "drop"
  ) 

psych_table %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

## AUDIT score

```{r}
model_audit <- lm(audit_sum_pre ~ group*version, data=demo_psych)
tab_model(model_audit, show.stat = T, show.df = T)
```

```{r}
# calculate
demo_psych <- demo_psych %>%
  mutate(audit_pre = as.numeric(audit_sum_pre),
         audit_post = as.numeric(audit_sum_post))

audit_df <- demo_psych %>%
  select(prolific_ID, group, version, audit_pre)

audit_df_summary <- audit_df %>%
  group_by(group, version) %>%
  summarise(mean_audit = mean(audit_pre, na.rm = TRUE),
            se_audit = sd(audit_pre, na.rm = TRUE)/sqrt(n()),
            ci_l = ci(audit_pre, na.rm=TRUE)[2],
            ci_u = ci(audit_pre, na.rm=TRUE)[3],
            n = n()
            )

audit_df_summary %>%
  kable("html") %>%
  kable_styling(font_size = 12,
                latex_options = "scale_down")
```

```{r}
ggplot(audit_df, aes(x=group, y=audit_pre)) +
  geom_violin(aes(fill = group)) +
  geom_boxplot(width=0.1, position=position_dodge(width = 0.9),
               size=0.8) +
  scale_y_continuous(labels = scales::comma) +
  xlab("") +
  ylab("AUDIT score") +
  facet_wrap(~ version) +
  theme_light(base_size = 16) +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) +
  scale_fill_viridis(option = "plasma", discrete = TRUE)
```

## AUD criteria

```{r}
model_aud <- lm(aud_sum ~ group*version, data=demo_psych)
tab_model(model_aud, show.stat = T, show.df = T)
```

## AUD diagnosis

```{r}
table_aud <- table(demo_psych$group_version, demo_psych$aud_group)
table_aud_group <- table(demo_psych$group, demo_psych$aud_group)
table_aud_version <- table(demo_psych$version, demo_psych$aud_group)

chisq.test(table_aud)
chisq.test(table_aud_group)
chisq.test(table_aud_version)
```

## Drinking days past 3 months

```{r}
model_drink_days <- lm(drinking_days ~ group*version, data=demo_psych)
tab_model(model_drink_days, show.stat = T, show.df = T)
```

## Daily drinks per drinking day past 3 months

```{r}
model_drinks <- lm(drinks_per_day ~ group*version, data=demo_psych)
tab_model(model_drinks, show.stat = T, show.df = T)
```

## Binge days past 3 months

```{r}
model_binge_days <- lm(binge_days ~ group*version, data=demo_psych)
tab_model(model_binge_days, show.stat = T, show.df = T)
```

## Nicotine past 3 months

```{r}
nicotine_df <- demo_psych %>%
  mutate(nicotine_past3months = ifelse(nicotine_past3months %in% c("less than 1x per month",
                                                   "1-3 x per month", 
                                                   "1-4 x per week", 
                                                   "5-7 x per week"), "smoker", 
                                       ifelse(nicotine_past3months == "never", "non-smoker", nicotine_past3months)))
  
table_nicotine <- table(nicotine_df$group_version, nicotine_df$nicotine_past3months)
table_nicotine_group <- table(nicotine_df$group, nicotine_df$nicotine_past3months)
table_nicotine_version <- table(nicotine_df$version, nicotine_df$nicotine_past3months)

chisq.test(table_nicotine)
chisq.test(table_nicotine_group)
chisq.test(table_nicotine_version)
```

## Cannabis past 3 months

```{r}
cannabis_df <- demo_psych %>%
  mutate(cannabis_past3months = ifelse(cannabis_past3months %in% c("less than 1x per month",
                                                   "1-3 x per month", 
                                                   "1-4 x per week", 
                                                   "5-7 x per week"), "smoker", 
                                       ifelse(cannabis_past3months == "never", "non-smoker", cannabis_past3months)))

table_cannabis <- table(cannabis_df$group_version, cannabis_df$cannabis_past3months)
table_cannabis_group <- table(cannabis_df$group, cannabis_df$cannabis_past3months)
table_cannabis_version <- table(cannabis_df$version, cannabis_df$cannabis_past3months)

chisq.test(table_cannabis, simulate.p.value = F)
chisq.test(table_cannabis_group, simulate.p.value = F)
chisq.test(table_cannabis_version, simulate.p.value = F)
```

## Other drugs past 3 months

```{r}
drugs_df <- demo_psych %>%
  mutate(drugs_past3months = ifelse(drugs_past3months %in% c("less than 1x per month",
                                                   "1-3 x per month", 
                                                   "1-4 x per week", 
                                                   "5-7 x per week"), "smoker", 
                                       ifelse(drugs_past3months == "never", "non-smoker", drugs_past3months)))

table_drugs <- table(drugs_df$group_version, drugs_df$drugs_past3months)
table_drugs_group <- table(drugs_df$group, drugs_df$drugs_past3months)
table_drugs_version <- table(drugs_df$version, drugs_df$drugs_past3months)

chisq.test(table_drugs, simulate.p.value = F)
chisq.test(table_drugs_group, simulate.p.value = F)
chisq.test(table_drugs_version, simulate.p.value = F)
```

## CASA

```{r}
model_casa_unaware <- lm(casa_gf_unaware ~ group*version, data=demo_psych)
tab_model(model_casa_unaware, show.stat = T, show.df = T)
```

```{r}
model_casa_nonvol <- lm(casa_gf_nonvolitional ~ group*version, data=demo_psych)
tab_model(model_casa_nonvol, show.stat = T, show.df = T)
```

## UPPSP

```{r}
model_uppsp <- lm(uppsp_total ~ group*version, data=demo_psych)
tab_model(model_uppsp, show.stat = T, show.df = T)
```

## OCI

```{r}
model_oci <- lm(oci_total ~ group*version, data=demo_psych)
tab_model(model_oci, show.stat = T, show.df = T)
```

## DMQ

```{r}
model_dmq_social <- lm(dmq_social ~ group*version, data=demo_psych)
tab_model(model_dmq_social, show.stat = T, show.df = T)
```

```{r}
model_dmq_enhance <- lm(dmq_enhancement ~ group*version, data=demo_psych)
tab_model(model_dmq_enhance, show.stat = T, show.df = T)
```

```{r}
model_dmq_coping <- lm(dmq_coping ~ group*version, data=demo_psych)
tab_model(model_dmq_coping, show.stat = T, show.df = T)
```

```{r}
model_dmq_conformity <- lm(dmq_conformity ~ group*version, data=demo_psych)
tab_model(model_dmq_conformity, show.stat = T, show.df = T)
```

# Get NAs

```{r}
# how can age be NA?
colSums(is.na(demo_psych[(demo_psych$group=="Low-risk drinkers"&demo_psych$version=="Monetary version"),])) 

colSums(is.na(demo_psych[(demo_psych$group=="Low-risk drinkers"&demo_psych$version=="Alcohol version"),]))

colSums(is.na(demo_psych[(demo_psych$group=="Harmful drinkers"&demo_psych$version=="Monetary version"),]))

colSums(is.na(demo_psych[(demo_psych$group=="Harmful drinkers"&demo_psych$version=="Alcohol version"),]))

```
