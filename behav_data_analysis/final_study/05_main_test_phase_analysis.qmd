---
title: "Reduced Successor Representation in AUD"
subtitle: "Conformatory and exploratory behavioral data analyses"
doi: "https://doi.org/10.17605/OSF.IO/9TUZE"
author: "Milena Musial"
date: 09/25/2024
format: html
editor: visual
toc: TRUE
code-fold: TRUE
number-sections: TRUE
embed-resources: true
execute: 
  warning: FALSE
editor_options: 
  chunk_output_type: console
---

# Set up

```{r}
require(nothing, quietly = TRUE)
rm(list = ls(all = TRUE))

# Load packages
packages <- c("ggplot2", "tidyr", "kableExtra", "gmodels", "lme4", "sjPlot", "viridis", "forcats", "lmerTest", "car", "PerformanceAnalytics", "emmeans", "corrplot", "Hmisc", "performance", "MASS", "dplyr")
#install.packages(packages)
sapply(packages, require, character.only = TRUE)

# set color scheme
custom_colors <- viridis(5, option = "viridis")[c(1, 2, 3, 4, 5)]

# define paths
#data_path <- "~/work/group_folder/B01_FP2_WP3/WP3_DATA/FINAL_STUDY/RDFs"
data_path <- "~/Library/CloudStorage/OneDrive-Charité-UniversitätsmedizinBerlin/PhD/04_B01/WP3/WP3_DATA/FINAL_STUDY/RDFs"
model_path <- "/Users/milenamusial/Library/CloudStorage/OneDrive-Charité-UniversitätsmedizinBerlin/PhD/04_B01/WP3/WP3_DATA/FINAL_STUDY/model_objects"

# read dfs
load(file.path(data_path, "final_data_included.RData"))
load(file.path(data_path, "demo_psych_data_included.RData"))

```

# Main analysis

## Plots

### Performance per condition, group, version

```{r}

test_correct_paths_group_version_condition_df <- trial_df %>%
  filter(phase == "test",
         state %in% c(1)
         ) %>%
  group_by(group, version, condition) %>%
  summarise(mean_correct = mean(correct_path, na.rm = TRUE),
            se_correct = sd(correct_path, na.rm = TRUE)/sqrt(n()),
            ci_l = ci(correct_path, na.rm=TRUE)[2],
            ci_u = ci(correct_path, na.rm=TRUE)[3],
            n = n()
            )

test_correct_paths_group_version_condition_df %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")

```

```{r}

# bar plot
ggplot(test_correct_paths_group_version_condition_df, aes(x=condition, y=mean_correct*100)) +
  geom_bar(stat="identity", aes(fill = condition)) +
  geom_errorbar(aes(ymin=ci_l*100, ymax=ci_u*100),
                width=.2,
                position=position_dodge(.9)) +
  facet_grid(vars(group), vars(version)) +
  scale_y_continuous("% Correct paths", limits = c(0, 105)) +
  theme_light(base_size = 16) +
  theme(legend.position = "none",
        axis.title.x=element_blank(),
        axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) +
  scale_fill_viridis(option = "viridis", discrete = TRUE)

```

### Histogram of individual differences in performance per condition, group, version

```{r}

test_correct_paths_group_version_condition_ID_df <- trial_df %>%
  filter(phase == "test",
         state %in% c(1)
         ) %>%
  group_by(group, version, condition, ID) %>%
  summarise(mean_correct = mean(correct_path, na.rm = TRUE),
            se_correct = sd(correct_path, na.rm = TRUE)/sqrt(n()),
            ci_l = ci(correct_path, na.rm=TRUE)[2],
            ci_u = ci(correct_path, na.rm=TRUE)[3],
            n = n()
            )

test_correct_paths_group_version_condition_ID_df %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")

```

```{r}

# bar plot
ggplot(test_correct_paths_group_version_condition_ID_df, aes(x=mean_correct*100, fill = condition, color=condition)) +
  geom_histogram(alpha = 0.05, position="identity", binwidth = 20) +
  facet_grid(vars(group), vars(version)) +
  scale_x_continuous(name = "% Correct paths", breaks = seq(0, 100, by = 20)) +
  scale_y_continuous(name = "Number of participants") +
  theme_light(base_size = 16) +
  scale_fill_viridis(option = "viridis", discrete = TRUE) +
  scale_color_viridis(option = "viridis", discrete = TRUE)

```

## Logistic regression

```{r}
# Prepare LogReg dfs
logreg_test_path_group_version_condition_df_full <- trial_df %>%
  filter(phase == "test",
         state == 1) %>%
  mutate(condition = as.factor(condition),
         version = as.factor(version),
         group = as.factor(group),
         environment = as.factor(environment)) %>%
  dplyr::select(group,
         version,
         ID,
         correct_path,
         condition,
         environment)

logreg_test_path_condition_df_lowrisk_control <- trial_df %>%
  filter(phase == "test",
         state == 1,
         group == "Low-risk drinkers",
         version == "Monetary version") %>%
  mutate(condition = as.factor(condition),
         environment = as.factor(environment)) %>%
  dplyr::select(ID,
         correct_path,
         condition,
         environment)

logreg_test_path_group_condition_df_alcohol <- trial_df %>%
  filter(phase == "test",
         state == 1,
         version == "Alcohol version") %>%
  mutate(condition = as.factor(condition),
         group = as.factor(group),
         environment = as.factor(environment)) %>%
  dplyr::select(group,
         ID,
         correct_path,
         condition,
         environment)
```

### Model 1: Low-risk drinkers, control version, compare against transition revaluation

> **Hypothesis 1:** **Main effect of condition (reward vs. transition revaluation, goal-state vs. transition revaluation)**

> Low-risk drinkers use SR to some extent when learning in a non-alcohol context. Specifically, we expect more correct test phase paths in the reward revaluation and the goal-state revaluation conditions compared to the transition revaluation condition, respectively.

```{r}
contrasts(logreg_test_path_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 3)

model1 <- glmer(correct_path ~ condition + (1 | ID), data = logreg_test_path_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
saveRDS(model1, file=file.path(model_path, "model1.rds"))
model1 <- readRDS(file.path(model_path, "model1.rds"))

model1_rs <- glmer(correct_path ~ condition + (1 + condition | ID), data = logreg_test_path_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
saveRDS(model1_rs, file=file.path(model_path, "model1_rs.rds"))
model1_rs <- readRDS(file.path(model_path, "model1_rs.rds"))

anova(model1, model1_rs)

tab_model(model1_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model1_rs, check=c("pp_check", "reqq", "qq"))
```

### Model 2: Low-risk drinkers, control version, compare against policy revaluation

> **Hypothesis 2:** **Main effect of condition (reward vs. policy revaluation, goal-state vs. policy revaluation)**

> The differences between reward and transition revaluation and between goal-state and transition revaluation cannot fully be explained by use of a model-based strategy with a higher learning rate for the reward compared to the transition structure. Specifically, we expect fewer correct test phase paths in the policy revaluation condition compared to the reward and goal-state revaluation conditions, respectively.

```{r}
contrasts(logreg_test_path_condition_df_lowrisk_control$environment) <- contr.sum(5)
contrasts(logreg_test_path_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 4)

# model2 <- glmer(correct_path ~ condition + (1 | ID), data = logreg_test_path_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model2, file=file.path(model_path, "model2.rds"))
model2 <- readRDS(file.path(model_path, "model2.rds"))

# model2_rs <- glmer(correct_path ~ condition + (1 + condition | ID), data = logreg_test_path_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model2_rs, file=file.path(model_path, "model2_rs.rds"))
model2_rs <- readRDS(file.path(model_path, "model2_rs.rds"))

anova(model2, model2_rs)

tab_model(model2_rs, show.est = T, show.stat = T, df.method = "wald", auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model2_rs, check=c("pp_check", "reqq", "qq"))
```

#### Did individuals who explored more during learning phase perform better in policy revaluation (more positive slopes)?

```{r}
# extract individual slopes for condition (contrast reward vs. policy)
individual_slopes <- coef(model2_rs)$ID[,2]

# calculate how often suboptimal path was taken during learning
exploration_df <- trial_df %>%
  filter(group == "Low-risk drinkers",
         version == "Monetary version",
         condition == "Policy revaluation",
         phase == "learning") %>%
  filter(! trial %in% c(1,2,3,4)) %>%
  group_by(ID, trial) %>%
  mutate(least_optimal_path = case_when((state == 1 & correct == 0 & lead(correct) == 0) ~ 1, # incorrect state 1 and second stage choice
                                  (state == 1 & correct == 1) ~ 0, # correct state 1 choice
                                  (state == 1 & lead(correct) == 1) ~ 0), # correct second stage choice
         suboptimal_path = case_when((state == 1 & correct == 0) ~ 1, # incorrect state 1 choice
                                  (state == 1 & lead(correct) == 0) ~ 1, # incorrect second stage choice
                                  (state == 1 & correct == 1 & lead(correct) == 1) ~ 0,)) %>%  # correct state 1 and incorrect second stage choice)
  filter(state == 1) %>%
  group_by(ID) %>%
  mutate(percent_least_optimal_path = mean(least_optimal_path),
         percent_exploration = mean(suboptimal_path)) %>%
  select(ID, percent_least_optimal_path, percent_exploration) %>%
  unique() %>%
  arrange(ID)

exploration_df$individual_slope <- individual_slopes

cor.test(exploration_df$percent_least_optimal_path, exploration_df$individual_slope)
cor.test(exploration_df$percent_exploration, exploration_df$individual_slope)

ggplot(exploration_df, aes(x=percent_least_optimal_path, y=individual_slope)) +
  geom_point(aes(y=individual_slope)) +
  scale_y_continuous("Slope reward vs. policy") +
  scale_x_continuous("% Least optimal path during learning") +
  theme_light(base_size = 16)

ggplot(exploration_df, aes(x=percent_exploration, y=individual_slope)) +
  geom_point(aes(y=individual_slope)) +
  scale_y_continuous("Slope reward vs. policy") +
  scale_x_continuous("% Exploration during learning") +
  theme_light(base_size = 16)

```

### Model 3: Full dataset, compare against transition revaluation

> **Hypothesis 3:** **Interaction of condition (reward vs. transition revaluation) \* group (harmful vs. low-risk drinkers)**

> Individuals with harmful alcohol use (harmful drinkers) show a higher degree of SR use compared to individuals with low-risk alcohol use (low-risk drinkers). Specifically, we expect more correct test phase paths in the reward revaluation condition compared to the transition revaluation condition for harmful drinkers compared to low-risk drinkers.

> **Hypothesis 4:** **Interaction of condition (reward vs. transition revaluation) \* group (harmful vs. low-risk drinkers) \* context (alcohol vs. non-alcohol)**

> Harmful drinkers show a higher degree of SR use compared to low-risk drinkers when learning in an alcohol compared to a non-alcohol context. Specifically, we expect more correct test phase paths in the reward revaluation compared to the transition revaluation condition for harmful drinkers compared to low-risk drinkers in the alcohol compared to the non-alcohol task version.

```{r}
contrasts(logreg_test_path_group_version_condition_df_full$condition) <- contr.treatment(5, base = 3)

# create model matrices
mm <- model.matrix(correct_path ~ 1 + condition*group*version, data=logreg_test_path_group_version_condition_df_full)
conditionReward <- mm[,2]
conditionGoalstate <- mm[,3]
conditionPolicy <- mm[,4]
conditionControl <- mm[,5]
groupHarmful <- mm[,6]
conditionReward_groupHarmful <- mm[,8]
conditionGoalstate_groupHarmful <- mm[,9]
conditionPolicy_groupHarmful <- mm[,10]
conditionControl_groupHarmful <- mm[,11]
conditionReward_groupHarmful_versionAlc <- mm[,17]
conditionGoalstate_groupHarmful_versionAlc <- mm[,18]
conditionPolicy_groupHarmful_versionAlc <- mm[,19]
conditionControl_groupHarmful_versionAlc <- mm[,20]

# model3 <- glmer(correct_path ~
#                   conditionReward + conditionGoalstate + conditionPolicy + conditionControl + 
#                   groupHarmful +
#                   conditionReward_groupHarmful + conditionGoalstate_groupHarmful +
#                   conditionPolicy_groupHarmful + conditionControl_groupHarmful +
#                   conditionReward_groupHarmful_versionAlc + conditionGoalstate_groupHarmful_versionAlc +
#                   conditionPolicy_groupHarmful_versionAlc + conditionControl_groupHarmful_versionAlc +
#                   (1 | ID),
#                 data = logreg_test_path_group_version_condition_df_full,
#                 family = "binomial",
#                 glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model3, file=file.path(model_path, "model3.rds"))
model3 <- readRDS(file.path(model_path, "model3.rds"))

# model3_rs <- glmer(correct_path ~
#                   conditionReward + conditionGoalstate + conditionPolicy + conditionControl + 
#                   groupHarmful +
#                   conditionReward_groupHarmful + conditionGoalstate_groupHarmful +
#                   conditionPolicy_groupHarmful + conditionControl_groupHarmful +
#                   conditionReward_groupHarmful_versionAlc + conditionGoalstate_groupHarmful_versionAlc +
#                   conditionPolicy_groupHarmful_versionAlc + conditionControl_groupHarmful_versionAlc +
#                   (1 + conditionReward + conditionGoalstate + conditionPolicy + conditionControl | ID),
#                 data = logreg_test_path_group_version_condition_df_full,
#                 family = "binomial",
#                 glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model3_rs, file=file.path(model_path, "model3_rs.rds"))
model3_rs <- readRDS(file.path(model_path, "model3_rs.rds"))

anova(model3, model3_rs)

tab_model(model3_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model3_rs, check=c("pp_check", "reqq", "qq"))
```

#### Compare to model including all version effects

```{r}
contrasts(logreg_test_path_group_version_condition_df_full$condition) <- contr.treatment(5, base = 3)

# model3_rs_vers <- glmer(correct_path ~
#                   group*version*condition +
#                   (1 + condition | ID),
#                 data = logreg_test_path_group_version_condition_df_full,
#                 family = "binomial",
#                 glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model3_rs_vers, file=file.path(model_path, "model3_rs_vers.rds"))
model3_rs_vers <- readRDS(file.path(model_path, "model3_rs_vers.rds"))

anova(model3_rs, model3_rs_vers)

tab_model(model3_rs_vers, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model3_rs_vers, check=c("pp_check", "reqq", "qq"))
```

#### Inspect interactions

```{r}
plot_model(model3_rs_vers, type = "pred", terms = c("condition", "group", "version"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

```{r}
# get marginal means
mmeans <- emmeans(model3_rs_vers, specs = ~ condition|group*version, ref="Transition revaluation", type="response")
mmeans

# contrasts between marginal means per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=3, adjust = NULL)
contrasts

# contrast between contrasts per group and version
contrast(contrasts, list(lowriskcon_harmfulalc = c(-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0),
                         harmfulcon_lowriskalc = c(0,0,0,0,-1,0,0,0,1,0,0,0,0,0,0,0),
                         harmfulcon_harmfulalc = c(0,0,0,0,-1,0,0,0,0,0,0,0,1,0,0,0),
                         lowriskalc_harmfulalc = c(0,0,0,0,0,0,0,0,-1,0,0,0,1,0,0,0)), 
         by=NULL, adjust = "Holm")

# just to check if contrasts correct
# contrast(contrasts, "pairwise", by=NULL, adjust = NULL)
```

#### Inspect MB contributions

```{r}
# get marginal means
mmeans <- emmeans(model3_rs_vers, specs = ~ condition|group*version, ref="Transition revaluation", type="response")
mmeans

# get differences in transition revaluation performance between groups and versions
contrast(mmeans, list(lowriskcon_harmfulalc = c(0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0),
                      harmfulcon_lowriskalc = c(0,0,0,0,0,0,0,-1,0,0,0,0,1,0,0,0,0,0,0,0),
                      harmfulcon_harmfulalc = c(0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1,0,0),
                      lowriskalc_harmfulalc = c(0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0,0)), 
         ref=3, adjust = "Holm", by=NULL)
```

### Model 4: Alcohol context, compare against reward revaluation

> **Hypothesis 5: Interaction of condition (goal-state vs. reward revaluation) \* group (harmful vs. low-risk drinkers)**

> Harmful drinkers show a higher degree of rigid goal-based reduced SR use when learning in an alcohol context compared to low-risk drinkers. Specifically, we expect less correct test phase paths in the goal-state compared to the reward revaluation condition for harmful drinkers compared to low-risk drinkers.

```{r}
contrasts(logreg_test_path_group_condition_df_alcohol$environment) <- contr.sum(5)
contrasts(logreg_test_path_group_condition_df_alcohol$condition) <- contr.treatment(5, base = 1)

# model4 <- glmer(correct_path ~ condition*group + (1 | ID), data = logreg_test_path_group_condition_df_alcohol, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model4, file=file.path(model_path, "model4.rds"))
model4 <- readRDS(file.path(model_path, "model4.rds"))

# model4_rs <- glmer(correct_path ~ condition*group + (1 + condition | ID), data = logreg_test_path_group_condition_df_alcohol, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model4_rs, file=file.path(model_path, "model4_rs.rds"))
model4_rs <- readRDS(file.path(model_path, "model4_rs.rds"))

anova(model4, model4_rs)

tab_model(model4_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model4_rs, check=c("pp_check", "reqq", "qq"))
```

#### Inspect effects per group (n.s.)

```{r}
plot_model(model4_rs, type = "pred", terms = c("condition", "group"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

```{r}
# get marginal means
mmeans <- emmeans(model4_rs, specs = ~ condition|group, ref="Transition revaluation", type="response")
mmeans

# contrasts between marginal means per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=1, adjust = NULL)
contrasts

# contrast between contrasts per group and version
contrast(contrasts, list(lowrisk_harmful = c(-1,0,0,0,1,0,0,0)), by=NULL)
```

### Model 5: Full dataset, compare against reward revaluation

> **Hypothesis 6: Interaction of condition (goal-state vs. reward revaluation) \* group (harmful vs. low-risk drinkers) \* context (alcohol vs. non-alcohol)**

> Harmful drinkers show a higher degree of rigid goal-based reduced SR use compared to low-risk drinkers when learning in an alcohol compared to a non-alcohol context. Specifically, we expect less correct test phase paths in the goal-state compared to the reward revaluation condition for harmful drinkers compared to low-risk drinkers in the alcohol compared to the non-alcohol task version.

```{r}
contrasts(logreg_test_path_group_version_condition_df_full$condition) <- contr.treatment(5, base = 1)

# create model matrices
mm <- model.matrix(correct_path ~ 1 + condition*group*version, data=logreg_test_path_group_version_condition_df_full)
conditionGoalstate <- mm[,2]
conditionTransition <- mm[,3]
conditionPolicy <- mm[,4]
conditionControl <- mm[,5]
groupHarmful <- mm[,6]
conditionGoalstate_groupHarmful <- mm[,8]
conditionTransition_groupHarmful <- mm[,9]
conditionPolicy_groupHarmful <- mm[,10]
conditionControl_groupHarmful <- mm[,11]
conditionGoalstate_groupHarmful_versionAlc <- mm[,17]
conditionTransition_groupHarmful_versionAlc <- mm[,18]
conditionPolicy_groupHarmful_versionAlc <- mm[,19]
conditionControl_groupHarmful_versionAlc <- mm[,20]

# model5 <- glmer(correct_path ~
#                   conditionGoalstate + conditionTransition + conditionPolicy + conditionControl + 
#                   groupHarmful +
#                   conditionGoalstate_groupHarmful + conditionTransition_groupHarmful +
#                   conditionPolicy_groupHarmful + conditionControl_groupHarmful +
#                   conditionGoalstate_groupHarmful_versionAlc + conditionTransition_groupHarmful_versionAlc +
#                   conditionPolicy_groupHarmful_versionAlc + conditionControl_groupHarmful_versionAlc +
#                   (1 | ID),
#                 data = logreg_test_path_group_version_condition_df_full,
#                 family = "binomial",
#                 glmerControl(optCtrl=list(maxfun=1e6),
#                              optimizer = "bobyqa"))
# saveRDS(model5, file=file.path(model_path, "model5.rds"))
model5 <- readRDS(file.path(model_path, "model5.rds"))

# model5_rs <- glmer(correct_path ~
#                   conditionGoalstate + conditionTransition + conditionPolicy + conditionControl + 
#                   groupHarmful +
#                   conditionGoalstate_groupHarmful + conditionTransition_groupHarmful +
#                   conditionPolicy_groupHarmful + conditionControl_groupHarmful +
#                   conditionGoalstate_groupHarmful_versionAlc + conditionTransition_groupHarmful_versionAlc +
#                   conditionPolicy_groupHarmful_versionAlc + conditionControl_groupHarmful_versionAlc +
#                   (1 + conditionGoalstate + conditionTransition + conditionPolicy + conditionControl | ID),
#                 data = logreg_test_path_group_version_condition_df_full,
#                 family = "binomial",
#                 glmerControl(optCtrl=list(maxfun=1e6),
#                              optimizer = "bobyqa"))
# saveRDS(model5_rs, file=file.path(model_path, "model5_rs.rds"))
model5_rs <- readRDS(file.path(model_path, "model5_rs.rds"))

anova(model5, model5_rs)

tab_model(model5_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model5_rs, check=c("pp_check", "reqq", "qq"))
```

#### Compare to model including all version effects

```{r}
contrasts(logreg_test_path_group_version_condition_df_full$condition) <- contr.treatment(5, base = 1)

# model5_rs_vers <- glmer(correct_path ~
#                   group*version*condition +
#                   (1 + condition | ID),
#                 data = logreg_test_path_group_version_condition_df_full,
#                 family = "binomial",
#                 glmerControl(optCtrl=list(maxfun=1e6),
#                              optimizer = "bobyqa"))
# saveRDS(model5_rs_vers, file=file.path(model_path, "model5_rs_vers.rds"))
model5_rs_vers <- readRDS(file.path(model_path, "model5_rs_vers.rds"))

anova(model5_rs, model5_rs_vers)

tab_model(model5_rs_vers, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model5_rs_vers, check=c("pp_check", "reqq", "qq"))
```

#### Inspect interactions

```{r}
plot_model(model5_rs_vers, type = "pred", terms = c("condition", "group", "version"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

```{r}
# get marginal means
mmeans <- emmeans(model5_rs_vers, specs = ~ condition|group*version, ref="Reward revaluation", type="response")
mmeans

# contrasts between marginal means per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=1, adjust = NULL)
contrasts

# contrast between contrasts per group and version
contrast(contrasts, list(lowriskcon_harmfulalc = c(-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0),
                         harmfulcon_lowriskalc = c(0,0,0,0,-1,0,0,0,1,0,0,0,0,0,0,0),
                         harmfulcon_harmfulalc = c(0,0,0,0,-1,0,0,0,0,0,0,0,1,0,0,0),
                         lowriskalc_harmfulalc = c(0,0,0,0,0,0,0,0,-1,0,0,0,1,0,0,0)), 
         by=NULL, adjust = "Holm")
```

#### Inspect evidence for random-policy SR (contrast reward vs. policy)

```{r}
# get marginal means
mmeans <- emmeans(model5_rs_vers, specs = ~ condition|group*version, ref="Reward revaluation", type="response")
mmeans

# contrasts between marginal means per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=1, adjust = NULL)
contrasts

# contrast between contrasts per group and version
contrast(contrasts, list(#lowriskcon_harmfulcon = c(-1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0),
                         #lowriskcon_lowriskalc = c(-1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0),
                         lowriskcon_harmfulalc = c(0,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,0),
                         harmfulcon_lowriskalc = c(0,0,0,0,0,0,-1,0,0,0,1,0,0,0,0,0),
                         harmfulcon_harmfulalc = c(0,0,0,0,0,0,-1,0,0,0,0,0,0,0,1,0),
                         lowriskalc_harmfulalc = c(0,0,0,0,0,0,0,0,0,0,-1,0,0,0,1,0)), 
         by=NULL, adjust = "Holm")

```

#### Inspect MF contributions (contrast control vs. reward, goal-state, policy, transition)

```{r}
# get marginal means
mmeans <- emmeans(model5_rs_vers, specs = ~ condition|group*version, ref="Reward revaluation", type="response")
mmeans

# get differences in transition revaluation performance between groups and versions
contrast(mmeans, list(#lowriskcon_harmfulcon = c(0,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0),
                      lowriskcon_harmfulalc = c(-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0),
                      harmfulcon_lowriskalc = c(0,0,0,0,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,0,0),
                      harmfulcon_harmfulalc = c(0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1,0,0,0,0),
                      lowriskalc_harmfulalc = c(0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0,0,0,0)), 
         ref=3, adjust = "Holm", by=NULL)

```

### Compare to control condition

#### Model 1: Low-risk drinkers, control version, compare against control condition

```{r}
contrasts(logreg_test_path_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 5)

# model1_control <- glmer(correct_path ~ condition + (1 | ID), data = logreg_test_path_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model1_control, file=file.path(model_path, "model1_control.rds"))
model1_control <- readRDS(file.path(model_path, "model1_control.rds"))

# model1_control_rs <- glmer(correct_path ~ condition + (1 + condition | ID), data = logreg_test_path_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model1_control_rs, file=file.path(model_path, "model1_control_rs.rds"))
model1_control_rs <- readRDS(file.path(model_path, "model1_control_rs.rds"))

anova(model1_control, model1_control_rs)

tab_model(model1_control_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model1_control_rs, check=c("pp_check", "reqq", "qq"))
```

#### Model 3: Full dataset, compare against control condition

```{r}
contrasts(logreg_test_path_group_version_condition_df_full$condition) <- contr.treatment(5, base = 5)

# model3_control_rs_vers <- glmer(correct_path ~
#                   group*version*condition +
#                   (1 + condition | ID),
#                 data = logreg_test_path_group_version_condition_df_full,
#                 family = "binomial",
#                 glmerControl(optCtrl=list(maxfun=1e6),
#                              optimizer = "bobyqa"))
# saveRDS(model3_control_rs_vers, file=file.path(model_path, "model3_control_rs_vers.rds"))
model3_control_rs_vers <- readRDS(file.path(model_path, "model3_control_rs_vers.rds"))

tab_model(model3_control_rs_vers, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model3_control_rs_vers, check=c("pp_check", "reqq", "qq"))
```

#### Post-hoc tests: Control performance really comparable across all groups and versions?

```{r}
# get marginal means
mmeans <- emmeans(model3_control_rs_vers, specs = ~ condition|group*version, type="response")
mmeans

# contrasts between marginal means per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=5, adjust = NULL)
contrasts

# contrast between contrasts per group and version
contrast(mmeans, list(lowriskcon_harmfulalc = c(0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1),
                         harmfulcon_lowriskalc = c(0,0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0,0,0,0,0),
                         harmfulcon_harmfulalc = c(0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1),
                         lowriskalc_harmfulalc = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,1)), 
         by=NULL, adjust = "Holm")
```

#### Inspect MF contributions

Via post hoc tests

```{r}
plot_model(model3_control_rs_vers, type = "pred", terms = c("condition", "group", "version"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

```{r}
# get marginal means
mmeans <- emmeans(model3_control_rs_vers, specs = ~ condition|group*version, type="response")
mmeans

# contrasts between marginal means per group and version
contrasts <- contrast(mmeans, list(control_vs_other = c(0.25, 0.25, 0, 0.25, -0.75)), adjust = NULL)
contrasts

contrast(contrasts, "pairwise", by=NULL, adjust="mvt")

# contrast between contrasts per group and version
contrast(contrasts, list(lowriskcon_harmfulalc = c(-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0),
                         harmfulcon_lowriskalc = c(0,0,0,0,-1,0,0,0,1,0,0,0,0,0,0,0),
                         harmfulcon_harmfulalc = c(0,0,0,0,-1,0,0,0,0,0,0,0,1,0,0,0),
                         lowriskalc_harmfulalc = c(0,0,0,0,0,0,0,0,-1,0,0,0,1,0,0,0)), 
         by=NULL, adjust = "Holm")
```

Via new model

```{r}
# custom contrasts
contrast_of_interest <- t(as.matrix(c(1/3, 1/3, 0, 1/3, -1)))
inverted_contrast_of_interest <- MASS::ginv(contrast_of_interest)
inverted_contrast_of_interest %>% fractions()

contrasts(logreg_test_path_group_version_condition_df_full$condition) <- inverted_contrast_of_interest

model3_control_custom_rs_vers <- glmer(correct_path ~
                  group*version*condition +
                  (1 + condition | ID),
                data = logreg_test_path_group_version_condition_df_full,
                family = "binomial",
                glmerControl(optCtrl=list(maxfun=1e6),
                             optimizer = "bobyqa"))
saveRDS(model3_control_custom_rs_vers, file=file.path(model_path, "model3_control_custom_rs_vers.rds"))
model3_control_custom_rs_vers <- readRDS(file.path(model_path, "model3_control_custom_rs_vers.rds"))

tab_model(model3_control_custom_rs_vers, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model3_control_rs_vers, check=c("pp_check", "reqq", "qq"))
```

#### Model 4: Alcohol context, compare against reward revaluation

```{r}
contrasts(logreg_test_path_group_condition_df_alcohol$condition) <- contr.treatment(5, base = 5)

# model4_control <- glmer(correct_path ~ condition*group + (1 | ID), data = logreg_test_path_group_condition_df_alcohol, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model4_control, file=file.path(model_path, "model4_control.rds"))
model4_control <- readRDS(file.path(model_path, "model4_control.rds"))

# model4_control_rs <- glmer(correct_path ~ condition*group + (1 + condition | ID), data = logreg_test_path_group_condition_df_alcohol, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model4_control_rs, file=file.path(model_path, "model4_control_rs.rds"))
model4_control_rs <- readRDS(file.path(model_path, "model4_control_rs.rds"))

anova(model4_control, model4_control_rs)

tab_model(model4_control_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model4_control_rs, check=c("pp_check", "reqq", "qq"))
```

# Time effects on correct paths

## Condition index

### Plot

```{r}
# get percent correct over time
test_paths_group_version_condition_index_df <- trial_df %>%
  mutate(condition_index = as.factor(condition_index)) %>%
  filter(phase == "test",
         state == 1
         ) %>%
  group_by(group, version, condition, condition_index) %>%
  summarise(mean_correct = mean(correct_path, na.rm = TRUE),
            se_correct = sd(correct_path, na.rm = TRUE)/sqrt(n()),
            ci_l = ci(correct_path, na.rm=TRUE)[2],
            ci_u = ci(correct_path, na.rm=TRUE)[3],
            n = n()
            )

test_paths_group_version_condition_index_df %>%
  kable("html") %>%
  kable_styling(font_size = 16,
                latex_options = "scale_down")

```

```{r}
# bar plot
ggplot(test_paths_group_version_condition_index_df, aes(x=condition_index, y=mean_correct*100, fill=condition)) +
  geom_bar(stat="identity", position=position_dodge(), aes(fill = condition)) +
  geom_errorbar(aes(ymin=ci_l*100, ymax=ci_u*100), width=.2, position=position_dodge(.9)) +
  facet_grid(vars(group), vars(version)) +
  scale_y_continuous("% Correct paths", limits = c(-10, 105)) +
  xlab("Condition index") +
  theme_light(base_size = 16) +
  scale_fill_viridis("Condition", option = "viridis", discrete = TRUE)

```

### Logistic regression

Condition index and trial number are centered at 0, so that intercept is meaningful and reflects the first index/trial.

```{r}
# Prepare LogReg dfs
logreg_test_path_group_version_condition_env_time_df_full <- trial_df %>%
  filter(phase == "test",
         state == 1) %>%
  group_by(ID, condition) %>%
  mutate(accumulated_state1_visits = row_number()-1) %>%
  ungroup() %>%
  mutate(correct_path = as.factor(correct_path),
         condition = as.factor(condition),
         version = as.factor(version),
         group = as.factor(group),
         environment = as.factor(environment),
         condition_index = condition_index-1) %>%
  select(group,
         version,
         ID,
         correct_path,
         condition,
         condition_index,
         accumulated_state1_visits,
         environment)

logreg_test_path_condition_env_time_df_lowrisk_control <- trial_df %>%
  filter(phase == "test",
         state == 1,
         group == "Low-risk drinkers",
         version == "Monetary version") %>%
  group_by(ID, condition) %>%
  mutate(accumulated_state1_visits = row_number()-1) %>%
  ungroup() %>%
  mutate(correct_path = as.factor(correct_path),
         condition = as.factor(condition),
         environment = as.factor(environment),
         condition_index = condition_index-1) %>%
  select(ID,
         correct_path,
         condition,
         condition_index,
         accumulated_state1_visits,
         environment)

logreg_test_path_group_condition_env_time_df_alcohol <- trial_df %>%
  filter(phase == "test",
         state == 1,
         version == "Alcohol version") %>%
  group_by(ID, condition) %>%
  mutate(accumulated_state1_visits = row_number()-1) %>%
  ungroup() %>%
  mutate(correct_path = as.factor(correct_path),
         condition = as.factor(condition),
         group = as.factor(group),
         environment = as.factor(environment),
         condition_index = condition_index-1) %>%
  select(group,
         ID,
         correct_path,
         condition,
         condition_index,
         accumulated_state1_visits,
         environment)

```

#### Model 1_index: Low-risk drinkers, control version, compare against transition revaluation

```{r}
contrasts(logreg_test_path_condition_env_time_df_lowrisk_control$condition) <- contr.treatment(5, base = 3)

# model1_index <- glmer(correct_path ~ condition*condition_index + (1 + condition | ID), data = logreg_test_path_condition_env_time_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model1_index, file=file.path(model_path, "model1_index.rds"))
model1_index <- readRDS(file.path(model_path, "model1_index.rds"))

# model1_index_rs <- glmer(correct_path ~ condition*condition_index + (1 + condition + condition_index | ID), data = logreg_test_path_condition_env_time_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model1_index_rs, file=file.path(model_path, "model1_index_rs.rds"))
model1_index_rs <- readRDS(file.path(model_path, "model1_index_rs.rds"))

anova(model1_index, model1_index_rs)

tab_model(model1_index_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model1_index_rs, check=c("pp_check", "reqq", "qq"))
```

##### Inspect interactions

```{r}
plot_model(model1_index_rs, type = "pred", terms = c("condition", "condition_index"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

```{r}
# get marginal means
mmeans <- emtrends(model1_index_rs, "condition", var="condition_index")
test(mmeans)

# contrasts between marginal means per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=3, adjust = "Holm")
contrasts
```

#### Model 2_index: Low-risk drinkers, control version, compare against reward revaluation

```{r}
contrasts(logreg_test_path_condition_env_time_df_lowrisk_control$condition) <- contr.treatment(5, base = 4)

# model2_index <- glmer(correct_path ~ condition*condition_index + (1 + condition | ID), data = logreg_test_path_condition_env_time_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model2_index, file=file.path(model_path, "model2_index.rds"))
model2_index <- readRDS(file.path(model_path, "model2_index.rds"))

# model2_index_rs <- glmer(correct_path ~ condition*condition_index + (1 + condition + condition_index | ID), data = logreg_test_path_condition_env_time_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model2_index_rs, file=file.path(model_path, "model2_index_rs.rds"))
model2_index_rs <- readRDS(file.path(model_path, "model2_index_rs.rds"))

anova(model2_index, model2_index_rs)

tab_model(model2_index_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model1_index_rs, check=c("pp_check", "reqq", "qq"))
```

##### Inspect interactions

```{r}
plot_model(model2_index_rs, type = "pred", terms = c("condition", "condition_index"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

```{r}
# get marginal means
mmeans <- emtrends(model2_index_rs, "condition", var="condition_index")
test(mmeans)

# contrasts between marginal means per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=4, adjust = NULL)
contrasts
```

#### Model 3_index: Full dataset, compare against transition revaluation

Change if it turns out that preregistered model without full version effects is optimal

```{r}
contrasts(logreg_test_path_group_version_condition_env_time_df_full$condition) <- contr.treatment(5, base = 3)

# model3_index <- glmer(correct_path ~ group*version*condition*condition_index + (1 + condition | ID),
#                 data = logreg_test_path_group_version_condition_env_time_df_full,
#                 family = "binomial",
#                 glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model3_index, file=file.path(model_path, "model3_index.rds"))
model3_index <- readRDS(file.path(model_path, "model3_index.rds"))

# model3_index_rs <- glmer(correct_path ~ group*version*condition*condition_index + (1 + condition + condition_index | ID),
#                 data = logreg_test_path_group_version_condition_env_time_df_full,
#                 family = "binomial",
#                 glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model3_index_rs, file=file.path(model_path, "model3_index_rs.rds"))
model3_index_rs <- readRDS(file.path(model_path, "model3_index_rs.rds"))

anova(model3_index, model3_index_rs)

tab_model(model3_index_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model3_index_rs, check=c("pp_check", "reqq", "qq"))
```

##### Inspect interactions

```{r}
plot_model(model3_index_rs, type = "pred", terms = c("condition", "condition_index", "version", "group"), bias_correction = T) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) 
```

Contrasts between time slopes in reward and transition revaluation

```{r}
# get marginal means
mmeans <- emtrends(model3_index_rs, ~ condition|version*group, var="condition_index")
test(mmeans, adjust = "Holm")

# contrasts between policy and transition slopes per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=3, adjust=NULL)
contrasts

# contrasts between contrasts
contrasts <- contrast(contrasts, list(#lowriskcon_lowriskalc = c(0,0,-1,0,0,0,1,0,0,0,0,0,0,0,0,0),
                                   lowriskcon_harmfulalc = c(-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0),
                                   harmfulcon_lowriskalc = c(0,0,0,0,1,0,0,0,-1,0,0,0,0,0,0,0),
                                   harmfulcon_harmfulalc = c(0,0,0,0,0,0,0,0,-1,0,0,0,1,0,0,0)), 
                      ref=4, adjust = "Holm", by=NULL)
contrasts
```

##### Inspect MB contributions

```{r}
# get marginal means
mmeans <- emtrends(model3_index_rs, ~ condition|version*group, var="condition_index")
test(mmeans, adjust = "Holm")

# contrasts between contrasts
contrasts <- contrast(mmeans, list(lowriskcon_harmfulalc = c(0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0),
                                   harmfulcon_lowriskalc = c(0,0,0,0,0,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,0),
                                   harmfulcon_harmfulalc = c(0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0,0)), 
                      ref=4, adjust = "Holm", by=NULL)
contrasts
```

#### Model 4_index: Alcohol context, compare against reward revaluation

```{r}
contrasts(logreg_test_path_group_condition_env_time_df_alcohol$condition) <- contr.treatment(5, base = 1)

# model4_index <- glmer(correct_path ~ condition*group*condition_index + (1 + condition | ID), data = logreg_test_path_group_condition_env_time_df_alcohol, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model4_index, file=file.path(model_path, "model4_index.rds"))
model4_index <- readRDS(file.path(model_path, "model4_index.rds"))

# model4_index_rs <- glmer(correct_path ~ condition*group*condition_index + (1 + condition + condition_index | ID), data = logreg_test_path_group_condition_env_time_df_alcohol, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model4_index_rs, file=file.path(model_path, "model4_index_rs.rds"))
model4_index_rs <- readRDS(file.path(model_path, "model4_index_rs.rds"))

anova(model4_index, model4_index_rs)

tab_model(model4_index_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model4_index_rs, check=c("pp_check", "reqq", "qq"))
```

##### Inspect interactions

```{r}
plot_model(model4_index_rs, type = "pred", terms = c("condition", "condition_index", "group"), bias_correction = T) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) 
```

Contrasts between time slopes in goal-state and reward revaluation

```{r}
# get marginal means
mmeans <- emtrends(model4_index_rs, ~ condition|group, var="condition_index")
test(mmeans, adjust = "Holm")

# contrasts between policy and transition slopes per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=1, adjust=NULL)
contrasts

# contrasts between contrasts
contrasts <- contrast(contrasts, list(#lowriskcon_lowriskalc = c(0,0,-1,0,0,0,1,0,0,0,0,0,0,0,0,0),
                                   lowriskcon_harmfulalc = c(0,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,0),
                                   harmfulcon_lowriskalc = c(0,0,0,0,0,0,1,0,0,0,-1,0,0,0,0,0),
                                   harmfulcon_harmfulalc = c(0,0,0,0,0,0,0,0,0,0,-1,0,0,0,1,0)), 
                      ref=4, adjust = "Holm", by=NULL)
contrasts
```

#### Model 5_index: Full dataset, compare against reward revaluation

```{r}

contrasts(logreg_test_path_group_version_condition_env_time_df_full$condition) <- contr.treatment(5, base = 1)

# model5_index <- glmer(correct_path ~ group*version*condition*condition_index + (1 + condition | ID),
#                 data = logreg_test_path_group_version_condition_env_time_df_full,
#                 family = "binomial",
#                 glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model5_index, file=file.path(model_path, "model5_index.rds"))
model5_index <- readRDS(file.path(model_path, "model5_index.rds"))

# model5_index_rs <- glmer(correct_path ~ group*version*condition*condition_index + (1 + condition + condition_index | ID),
#                 data = logreg_test_path_group_version_condition_env_time_df_full,
#                 family = "binomial",
#                 glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model5_index_rs, file=file.path(model_path, "model5_index_rs.rds"))
model5_index_rs <- readRDS(file.path(model_path, "model5_index_rs.rds"))

anova(model5_index, model5_index_rs)

tab_model(model5_index_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model5_index_rs, check=c("pp_check", "reqq", "qq"))
```

##### Inspect interactions

```{r}
plot_model(model5_index_rs, type = "pred", terms = c("condition", "condition_index", "version", "group"), bias_correction = T) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) 
```

Contrasts between time slopes in goal-state and reward revaluation

```{r}
# get marginal means
mmeans <- emtrends(model5_index_rs, ~ condition|version*group, var="condition_index")
test(mmeans, adjust = "Holm")

# contrasts between policy and transition slopes per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=1, adjust=NULL)
contrasts

# contrasts between contrasts
contrasts <- contrast(contrasts, list(#lowriskcon_lowriskalc = c(0,0,-1,0,0,0,1,0,0,0,0,0,0,0,0,0),
                                   lowriskcon_harmfulalc = c(-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0),
                                   harmfulcon_lowriskalc = c(0,0,0,0,1,0,0,0,-1,0,0,0,0,0,0,0),
                                   harmfulcon_harmfulalc = c(0,0,0,0,0,0,0,0,-1,0,0,0,1,0,0,0)), 
                      ref=4, adjust = "Holm", by=NULL)
contrasts
```

Contrasts between index 1 in policy and reward revaluation

```{r}
# get marginal means
mmeans <- emmeans(model5_index_rs, ~ condition|version*group*condition_index, at = list(condition_index = c(0)))
test(mmeans, adjust = "Holm")

# contrasts between policy and transition slopes per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=1, adjust=NULL)
contrasts

# contrasts between contrasts
contrasts <- contrast(contrasts, list(lowriskcon_harmfulalc = c(0,0,-1,0,0,0,0,0,0,0,0,0,0,0,-1,0),
                                   harmfulcon_lowriskalc = c(0,0,0,0,0,0,1,0,0,0,-1,0,0,0,0,0),
                                   harmfulcon_harmfulalc = c(0,0,0,0,0,0,0,0,0,0,-1,0,0,0,1,0)), 
                      ref=4, adjust = "Holm", by=NULL)
contrasts
```

##### Inspect MF contributions

```{r}
# get marginal means
mmeans <- emtrends(model5_index_rs, ~ condition|version*group, var="condition_index")
test(mmeans, adjust = "Holm")

# contrasts between contrasts
contrasts <- contrast(mmeans, list(lowriskcon_harmfulalc = c(-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0),
                                   harmfulcon_lowriskalc = c(0,0,0,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0),
                                   harmfulcon_harmfulalc = c(0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,1,0,0,0,0)), 
                      ref=4, adjust = "Holm", by=NULL)
contrasts
```

##### Inspect evidence for random-policy SR (contrast reward vs. policy)

```{r}
# get marginal means
mmeans <- emtrends(model5_index_rs, ~ condition|version*group, var="condition_index")
test(mmeans, adjust = "Holm")

# contrasts between policy and transition slopes per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=1, adjust=NULL)
contrasts

# contrasts between contrasts
contrasts <- contrast(contrasts, list(#lowriskcon_lowriskalc = c(0,0,-1,0,0,0,1,0,0,0,0,0,0,0,0,0),
                                   lowriskcon_harmfulalc = c(0,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,0),
                                   harmfulcon_lowriskalc = c(0,0,0,0,0,0,1,0,0,0,-1,0,0,0,0,0),
                                   harmfulcon_harmfulalc = c(0,0,0,0,0,0,0,0,0,0,-1,0,0,0,1,0)), 
                      ref=4, adjust = "Holm", by=NULL)
contrasts
```

## Trial number (within condition) effects

### Plot

```{r}
test_path_group_version_condition_trial_df <- trial_df %>%
  filter(phase == "test",
         state == 1) %>%
  group_by(group, version, condition, trial) %>%
  summarise(n = n(),
            sum_correct_path = sum(correct_path, na.rm=T),
            mean_correct_path = mean(correct_path, na.rm=T),
            se_correct_path = sd(correct_path, na.rm = TRUE)/sqrt(n()),
            ci_l = ci(correct_path, na.rm=TRUE)[2],
            ci_u = ci(correct_path, na.rm=TRUE)[3]
            )

test_path_group_version_condition_trial_df %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

```{r}
# line plot state 1
ggplot(test_path_group_version_condition_trial_df, aes(x=trial, y=mean_correct_path*100)) +
  geom_line(aes(color=condition), size=1) +
  geom_ribbon(aes(ymin = ci_l * 100, ymax = ci_u * 100, fill = condition), alpha = 0.2) +
  scale_y_continuous(limits = c(-20, 150)) +
  facet_grid(vars(group), vars(version)) +
  theme_light(base_size = 16) +
  xlab("Test trial") +
  ylab("% Correct paths") +
  theme(legend.title = element_blank()) +
  scale_color_viridis(option = "viridis", discrete = TRUE) +
  scale_fill_viridis(option = "viridis", discrete = TRUE)
```

### Logistic regression

#### Model 1_trial: Low-risk drinkers, control version, compare against transition revaluation

```{r}
contrasts(logreg_test_path_condition_env_time_df_lowrisk_control$condition) <- contr.treatment(5, base = 3)

# model1_trial <- glmer(correct_path ~ condition*accumulated_state1_visits + (1 + condition | ID), data = logreg_test_path_condition_env_time_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model1_trial, file=file.path(model_path, "model1_trial.rds"))
model1_trial <- readRDS(file.path(model_path, "model1_trial.rds"))

# does not converge
# model1_trial_rs <- glmer(correct_path ~ condition*accumulated_state1_visits + (1 + condition + accumulated_state1_visits | ID), data = logreg_test_path_condition_env_time_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model1_trial_rs, file=file.path(model_path, "model1_trial_rs.rds"))
model1_trial_rs <- readRDS(file.path(model_path, "model1_trial_rs.rds"))

anova(model1_trial, model1_trial_rs)

tab_model(model1_trial, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model1_trial, check=c("pp_check", "reqq", "qq"))
```

##### Inspect interactions

```{r}
plot_model(model1_trial, type = "pred", terms = c("condition", "accumulated_state1_visits"), bias_correction = T) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

```{r}
# get marginal means
mmeans <- emtrends(model1_trial, "condition", var="accumulated_state1_visits")
test(mmeans)

# contrasts between marginal means per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=3, adjust = "Holm")
contrasts
```

#### Model 2_trial: Low-risk drinkers, control version, compare against policy revaluation

```{r}
contrasts(logreg_test_path_condition_env_time_df_lowrisk_control$condition) <- contr.treatment(5, base = 4)

# model2_trial <- glmer(correct_path ~ condition*accumulated_state1_visits + (1 + condition | ID), data = logreg_test_path_condition_env_time_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model2_trial, file=file.path(model_path, "model2_trial.rds"))
model2_trial <- readRDS(file.path(model_path, "model2_trial.rds"))

# model2_trial_rs <- glmer(correct_path ~ condition*accumulated_state1_visits + (1 + condition + accumulated_state1_visits | ID), data = logreg_test_path_condition_env_time_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model2_trial_rs, file=file.path(model_path, "model2_trial_rs.rds"))
model2_trial_rs <- readRDS(file.path(model_path, "model2_trial_rs.rds"))

anova(model2_trial, model2_trial_rs)

tab_model(model2_trial, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model2_trial, check=c("pp_check", "reqq", "qq"))
```

#### Model 3_trial: Full dataset, compare against transition revaluation

```{r}
contrasts(logreg_test_path_group_version_condition_env_time_df_full$condition) <- contr.treatment(5, base = 3)

# model3_trial <- glmer(correct_path ~ group*version*condition*accumulated_state1_visits + (1 + condition | ID),
#                 data = logreg_test_path_group_version_condition_env_time_df_full,
#                 family = "binomial",
#                 glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model3_trial, file=file.path(model_path, "model3_trial.rds"))
model3_trial <- readRDS(file.path(model_path, "model3_trial.rds"))

# does not converge
# model3_trial_rs <- glmer(correct_path ~ group*version*condition*accumulated_state1_visits + (1 + condition + accumulated_state1_visits | ID),
#                 data = logreg_test_path_group_version_condition_env_time_df_full,
#                 family = "binomial",
#                 glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model3_trial_rs, file=file.path(model_path, "model3_trial_rs.rds"))
model3_trial_rs <- readRDS(file.path(model_path, "model3_trial_rs.rds"))

anova(model3_trial, model3_trial_rs)

tab_model(model3_trial, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model3_trial, check=c("pp_check", "reqq", "qq"))
```

##### Inspect interactions

```{r}
plot_model(model3_trial, type = "pred", terms = c("condition", "accumulated_state1_visits", "group", "version"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

Contrasts between time slopes in control and transition revaluation

```{r}
# get marginal means
mmeans <- emtrends(model3_trial, ~ condition|version*group, var="accumulated_state1_visits")
test(mmeans, adjust = "Holm")

# contrasts between policy and transition slopes per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=3, adjust=NULL)
contrasts

# contrasts between contrasts
contrasts <- contrast(contrasts, list(lowriskcon_harmfulalc = c(0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,1),
                                   harmfulcon_lowriskalc = c(0,0,0,0,0,0,0,1,0,0,0,-1,0,0,0,0),
                                   harmfulcon_harmfulalc = c(0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,1)), 
                      ref=4, adjust = "Holm", by=NULL)
contrasts
```

#### Model 4_trial: Alcohol context, compare against reward revaluation

```{r}
contrasts(logreg_test_path_group_condition_env_time_df_alcohol$condition) <- contr.treatment(5, base = 1)

# model4_trial <- glmer(correct_path ~ condition*group*accumulated_state1_visits + (1 + condition | ID), data = logreg_test_path_group_condition_env_time_df_alcohol, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model4_trial, file=file.path(model_path, "model4_trial.rds"))
model4_trial <- readRDS(file.path(model_path, "model4_trial.rds"))

# model4_trial_rs <- glmer(correct_path ~ condition*group*accumulated_state1_visits + (1 + condition + accumulated_state1_visits | ID), data = logreg_test_path_group_condition_env_time_df_alcohol, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model4_trial_rs, file=file.path(model_path, "model4_trial_rs.rds"))
model4_trial_rs <- readRDS(file.path(model_path, "model4_trial_rs.rds"))

anova(model4_trial, model4_trial_rs)

tab_model(model4_trial_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model4_trial_rs, check=c("pp_check", "reqq", "qq"))
```

##### Inspect interactions

```{r}
plot_model(model4_trial_rs, type = "pred", terms = c("condition", "accumulated_state1_visits", "group"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

#### Model 5_trial: Full dataset, compare against reward revaluation

```{r}
contrasts(logreg_test_path_group_version_condition_env_time_df_full$condition) <- contr.treatment(5, base = 1)

# model5_trial <- glmer(correct_path ~ group*version*condition*accumulated_state1_visits + (1 + condition | ID),
#                 data = logreg_test_path_group_version_condition_env_time_df_full,
#                 family = "binomial",
#                 glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model5_trial, file=file.path(model_path, "model5_trial.rds"))
model5_trial <- readRDS(file.path(model_path, "model5_trial.rds"))

# does not converge
# model5_trial_rs <- glmer(correct_path ~ group*version*condition*accumulated_state1_visits + (1 + condition + accumulated_state1_visits | ID),
#                 data = logreg_test_path_group_version_condition_env_time_df_full,
#                 family = "binomial",
#                 glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(model5_trial_rs, file=file.path(model_path, "model5_trial_rs.rds"))
model5_trial_rs <- readRDS(file.path(model_path, "model5_trial_rs.rds"))

anova(model5_trial, model5_trial_rs)

tab_model(model5_trial, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model5_trial, check=c("pp_check", "reqq", "qq"))
```

##### Inspect interactions

```{r}
plot_model(model5_trial, type = "pred", terms = c("condition", "accumulated_state1_visits", "group", "version"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

<!-- # Environment effects -->

<!-- ## Plot -->

<!-- ```{r} -->

<!-- # get percent correct over time -->

<!-- test_path_component_environment_df <- trial_df %>% -->

<!--   mutate(environment = as.factor(environment)) %>% -->

<!--   filter(phase == "test", -->

<!--          state == 1 -->

<!--          ) %>% -->

<!--   group_by(version, group, environment) %>% -->

<!--   summarise(mean_correct = mean(correct_path, na.rm = TRUE), -->

<!--             se_correct = sd(correct_path, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(correct_path, na.rm=TRUE)[2], -->

<!--             ci_u = ci(correct_path, na.rm=TRUE)[3], -->

<!--             n = n()) -->

<!-- test_path_component_environment_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 16, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # bar plot -->

<!-- ggplot(test_path_component_environment_df, aes(x=environment, y=mean_correct*100, fill=environment)) + -->

<!--   geom_bar(stat="identity", aes(fill=environment), position=position_dodge()) + -->

<!--   geom_errorbar(aes(ymin=ci_l*100, ymax=ci_u*100), width=.2, position=position_dodge(.9)) + -->

<!--   scale_y_continuous(limits = c(0, 105)) + -->

<!--   facet_grid(vars(group), vars(version), scales = "free_x") + -->

<!--   xlab("Environment") + -->

<!--   ylab("% Correct paths") + -->

<!--   theme_light(base_size = 16) + -->

<!--   theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1), -->

<!--         legend.position = "none") + -->

<!--   scale_fill_viridis(option = "viridis", discrete = TRUE) -->

<!-- ``` -->

<!-- ## Logistic regression -->

<!-- Contrast to control condition. -->

<!-- ```{r} -->

<!-- logreg_test_path_group_condition_df_monetary <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state == 1, -->

<!--          version == "Monetary version") %>% -->

<!--   mutate(condition = as.factor(condition), -->

<!--          group = as.factor(group), -->

<!--          environment = as.factor(environment)) %>% -->

<!--   select(group, -->

<!--          ID, -->

<!--          correct_path, -->

<!--          condition, -->

<!--          environment) -->

<!-- ``` -->

<!-- ### Monetary version -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_path_group_condition_df_monetary$condition) <- contr.treatment(5, base = 5) -->

<!-- contrasts(logreg_test_path_group_condition_df_monetary$environment) <- contr.sum(5) -->

<!-- model_env_monetary <- glmer(correct_path ~ -->

<!--                   group*condition*environment + -->

<!--                   (1 + condition + environment | ID), -->

<!--                   data = logreg_test_path_group_condition_df_monetary, -->

<!--                   family = "binomial", -->

<!--                   glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6))) -->

<!-- tab_model(model_env_monetary, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- ### Alcohol version -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_path_group_condition_df_alcohol$condition) <- contr.treatment(5, base = 5) -->

<!-- contrasts(logreg_test_path_group_condition_df_alcohol$environment) <- contr.sum(5) -->

<!-- model_env_alcohol <- glmer(correct_path ~ -->

<!--                   group*condition*environment + -->

<!--                   (1 + condition + environment | ID), -->

<!--                   data = logreg_test_path_group_condition_df_alcohol, -->

<!--                   family = "binomial", -->

<!--                   glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6))) -->

<!-- tab_model(model_env_alcohol, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

# Reaction times

## RT in state 1 per condition

### Plot

```{r}

RT_state1_condition_df <- trial_df %>%
  filter(phase == "test",
         state %in% c(1)) %>%
  group_by(group, version, condition) %>%
  summarise(mean_RT = mean(RT),
            se_RT = sd(RT, na.rm = TRUE)/sqrt(n()),
            ci_l = ci(RT, na.rm=TRUE)[2],
            ci_u = ci(RT, na.rm=TRUE)[3])

RT_state1_condition_df %>%
  kable("html") %>%
  kable_styling(font_size = 16,
                latex_options = "scale_down")

```

```{r}

RT_state1_plotting_df <- trial_df %>%
  filter(phase == "test",
         state %in% c(1))

ggplot(RT_state1_plotting_df, aes(x=condition, y=RT, fill = condition)) +
  geom_boxplot() +
  scale_y_continuous(labels = scales::comma) +
  facet_grid(vars(group), vars(version)) +
  theme_light(base_size = 16) +
  xlab("Phase") +
  ylab("Reaction times") +
  ylim(c(0,13000)) +
  theme(legend.position = "none",
        axis.title.x=element_blank(),
        axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) +
  scale_fill_viridis("Condition", option = "viridis", discrete = TRUE)

```

### Linear regression

```{r}

linreg_test_state1_rt_df <- trial_df %>%
  filter(phase == "test",
         state == 1
         ) %>%
  mutate(condition = as.factor(condition),
         group = as.factor(group),
         version = as.factor(version),
         environment = as.factor(environment)) %>%
  select(ID,
         RT,
         condition,
         group,
         version,
         environment)
```

#### Versus control condition

```{r}
contrasts(linreg_test_state1_rt_df$condition) <- contr.treatment(5, base = 5)

rt_test_state1_control_model <- lmer(data = linreg_test_state1_rt_df,
                                 RT ~ group*version*condition + (1 | ID),
                                 control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)),
                                 REML = FALSE)

# does not converge
rt_test_state1_control_model_rs <- lmer(data = linreg_test_state1_rt_df,
                                 RT ~ group*version*condition + (1 + condition | ID),
                                 control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)),
                                 REML = FALSE)

anova(rt_test_state1_control_model, rt_test_state1_control_model_rs)

tab_model(rt_test_state1_control_model, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

```

##### Post-hoc tests

```{r}
plot_model(rt_test_state1_control_model, type = "pred", terms = c("condition", "group", "version"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

```{r}
# get marginal means
mmeans <- emmeans(rt_test_state1_control_model, ~ condition|version*group, pbkrtest.limit = 13000)
test(mmeans, adjust = "Holm")

# contrasts between policy and transition slopes per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=3, adjust="Holm")
contrasts

# contrasts between contrasts
contrasts <- contrast(contrasts, list(lowriskcon_harmfulalc = c(0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,1),
                                   harmfulcon_lowriskalc = c(0,0,0,0,0,0,0,1,0,0,0,-1,0,0,0,0),
                                   harmfulcon_harmfulalc = c(0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,1)), 
                      ref=4, adjust = "Holm", by=NULL)
contrasts
```

#### Versus reward condition

```{r}
contrasts(linreg_test_state1_rt_df$condition) <- contr.treatment(5, base = 1)

rt_test_state1_reward_model <- lmer(data = linreg_test_state1_rt_df,
                                 RT ~ group*version*condition + (1 | ID),
                                 control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)),
                                 REML = FALSE)

# does not converge
rt_test_state1_reward_model_rs <- lmer(data = linreg_test_state1_rt_df,
                                 RT ~ group*version*condition + (1 + condition | ID),
                                 control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)),
                                 REML = FALSE)

anova(rt_test_state1_reward_model, rt_test_state1_reward_model_rs)

tab_model(rt_test_state1_reward_model_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

```

<!-- ## RT in all states per condition -->

<!-- ### Plot -->

<!-- ```{r} -->

<!-- RT_state1_condition_df <- trial_df %>% -->

<!--   filter(phase == "test") %>% -->

<!--   group_by(group, version, condition) %>% -->

<!--   summarise(mean_RT = mean(RT), -->

<!--             se_RT = sd(RT, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(RT, na.rm=TRUE)[2], -->

<!--             ci_u = ci(RT, na.rm=TRUE)[3]) -->

<!-- RT_state1_condition_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 16, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- RT_state1_plotting_df <- trial_df %>% -->

<!--   filter(phase == "test") -->

<!-- ggplot(RT_state1_plotting_df, aes(x=condition, y=RT, fill = condition)) + -->

<!--   geom_boxplot() + -->

<!--   scale_y_continuous(labels = scales::comma) + -->

<!--   facet_grid(vars(group), vars(version)) + -->

<!--   theme_light(base_size = 16) + -->

<!--   ylab("Reaction times") + -->

<!--   theme(legend.position = "none", -->

<!--         axis.title.x=element_blank(), -->

<!--         axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) + -->

<!--   scale_fill_viridis("Condition", option = "viridis", discrete = TRUE) -->

<!-- ``` -->

<!-- ### Linear regression -->

<!-- ```{r} -->

<!-- linreg_test_state123_rt_df <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state %in% c(1,2,3) -->

<!--          ) %>% -->

<!--   mutate(condition = as.factor(condition), -->

<!--          group = as.factor(group), -->

<!--          version = as.factor(version), -->

<!--          environment = as.factor(environment)) %>% -->

<!--   select(ID, -->

<!--          RT, -->

<!--          condition, -->

<!--          group, -->

<!--          version, -->

<!--          environment) -->

<!-- contrasts(linreg_test_state123_rt_df$condition) <- contr.treatment(5, base = 5) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- rt_test_state123_model <- lmer(data = linreg_test_state123_rt_df, -->

<!--                                  RT ~ group*version*condition + (1 | ID), -->

<!--                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!--                                  REML = FALSE) -->

<!-- # does not converge -->

<!-- rt_test_state123_model_rs <- lmer(data = linreg_test_state123_rt_df, -->

<!--                                  RT ~ group*version*condition + (1 + condition | ID), -->

<!--                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!--                                  REML = FALSE) -->

<!-- anova(rt_test_state123_model, rt_test_state123_model_rs) -->

<!-- tab_model(rt_test_state123_model, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

## RT in state 1 - correct choice

### Plot

```{r}

RT_state1_condition_phase_correct_df <- trial_df %>%
  filter(phase == "test",
         state %in% c(1)) %>%
  group_by(group, version, condition, phase, correct) %>%
  summarise(mean_RT = mean(RT),
            se_RT = sd(RT, na.rm = TRUE)/sqrt(n()),
            ci_l = ci(RT, na.rm=TRUE)[2],
            ci_u = ci(RT, na.rm=TRUE)[3],
            n = n())

RT_state1_condition_phase_correct_df %>%
  kable("html") %>%
  kable_styling(font_size = 16,
                latex_options = "scale_down")

```

```{r}

RT_state1_correct_df <- trial_df %>%
  mutate(correct = as.factor(correct)) %>%
  filter(phase == "test",
         state %in% c(1))

ggplot(RT_state1_correct_df, aes(x=condition, y=RT, fill = correct)) +
  geom_boxplot() +
  scale_y_continuous(labels = scales::comma) +
  facet_grid(vars(group), vars(version)) +
  theme_light(base_size = 16) +
  ylab("Reaction times") +
  theme(axis.title.x=element_blank(),
        axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) +
  scale_fill_viridis("Correct", option = "magma", discrete = TRUE)

```

### Linear regression

```{r}

linreg_test_state1_rt_correct_df <- trial_df %>%
  filter(phase == "test",
         state == 1
         ) %>%
  mutate(condition = as.factor(condition),
         group = as.factor(group),
         version = as.factor(version),
         environment = as.factor(environment),
         correct = as.factor(correct)) %>%
  select(ID,
         RT,
         condition,
         group,
         version,
         environment,
         correct)
```

##### Compared to control condition

```{r}
contrasts(linreg_test_state1_rt_correct_df$condition) <- contr.treatment(5, base = 5)

rt_correct_test_state1_control_model <- lmer(data = linreg_test_state1_rt_correct_df,
                                 RT ~ group*version*condition*correct + (1 | ID),
                                 control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)),
                                 REML = FALSE)

# fails to converge
rt_correct_test_state1_control_model_rs <- lmer(data = linreg_test_state1_rt_correct_df,
                                 RT ~ group*version*condition*correct + (1 + condition | ID),
                                 control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)),
                                 REML = FALSE)

rt_correct_test_state1_control_model_rs2 <- lmer(data = linreg_test_state1_rt_correct_df,
                                 RT ~ group*version*condition*correct + (1 + condition + correct | ID),
                                 control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)),
                                 REML = FALSE)

anova(rt_correct_test_state1_control_model, rt_correct_test_state1_control_model_rs, rt_correct_test_state1_control_model_rs2)

tab_model(rt_correct_test_state1_control_model_rs2, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

```

###### Post-hoc tests

```{r}
plot_model(rt_correct_test_state1_control_model_rs2, type = "pred", terms = c("condition", "correct", "version", "group"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

```{r}
# get marginal means
mmeans <- emmeans(rt_correct_test_state1_control_model_rs2, ~ condition|correct*group*version)
test(mmeans)

# contrasts to control per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=5, adjust="Holm")
contrasts
```

##### Compared to reward condition

```{r}
contrasts(linreg_test_state1_rt_correct_df$condition) <- contr.treatment(5, base = 1)

rt_correct_test_state1_reward_model <- lmer(data = linreg_test_state1_rt_correct_df,
                                 RT ~ group*version*condition*correct + (1 | ID),
                                 control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)),
                                 REML = FALSE)

# fails to converge
rt_correct_test_state1_reward_model_rs <- lmer(data = linreg_test_state1_rt_correct_df,
                                 RT ~ group*version*condition*correct + (1 + condition | ID),
                                 control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)),
                                 REML = FALSE)

rt_correct_test_state1_reward_model_rs2 <- lmer(data = linreg_test_state1_rt_correct_df,
                                 RT ~ group*version*condition*correct + (1 + condition + correct | ID),
                                 control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)),
                                 REML = FALSE)

anova(rt_correct_test_state1_reward_model, rt_correct_test_state1_reward_model_rs, rt_correct_test_state1_reward_model_rs2)

tab_model(rt_correct_test_state1_reward_model_rs2, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

```

###### Post-hoc tests

```{r}
plot_model(rt_correct_test_state1_reward_model_rs2, type = "pred", terms = c("condition", "correct", "version", "group"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1))
```

```{r}
# get marginal means
mmeans <- emmeans(rt_correct_test_state1_reward_model_rs2, ~ condition|correct*group*version)
test(mmeans)

# contrasts to reward per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=1, adjust="Holm")
contrasts
```

<!-- ## RT in all states - correct choice -->

<!-- ### Plot -->

<!-- ```{r} -->

<!-- RT_state1_condition_phase_correct_df <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state %in% c(1,2,3)) %>% -->

<!--   group_by(group, version, condition, phase, correct) %>% -->

<!--   summarise(mean_RT = mean(RT), -->

<!--             se_RT = sd(RT, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(RT, na.rm=TRUE)[2], -->

<!--             ci_u = ci(RT, na.rm=TRUE)[3], -->

<!--             n = n()) -->

<!-- RT_state1_condition_phase_correct_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 16, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- RT_state1_correct_df <- trial_df %>% -->

<!--   mutate(correct = as.factor(correct)) %>% -->

<!--   filter(phase == "test", -->

<!--          state %in% c(1,2,3)) -->

<!-- ggplot(RT_state1_correct_df, aes(x=condition, y=RT, fill = correct)) + -->

<!--   geom_boxplot() + -->

<!--   scale_y_continuous(labels = scales::comma) + -->

<!--   facet_grid(vars(group), vars(version)) + -->

<!--   theme_light(base_size = 16) + -->

<!--   ylab("Reaction times") + -->

<!--   theme(axis.title.x=element_blank(), -->

<!--         axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) + -->

<!--   scale_fill_viridis("Correct", option = "magma", discrete = TRUE) -->

<!-- ``` -->

<!-- ### Linear regression -->

<!-- ```{r} -->

<!-- linreg_test_state123_rt_correct_df <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state%in% c(1,2,3) -->

<!--          ) %>% -->

<!--   mutate(condition = as.factor(condition), -->

<!--          group = as.factor(group), -->

<!--          version = as.factor(version), -->

<!--          environment = as.factor(environment), -->

<!--          correct = as.factor(correct)) %>% -->

<!--   select(ID, -->

<!--          RT, -->

<!--          condition, -->

<!--          group, -->

<!--          version, -->

<!--          environment, -->

<!--          correct) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- rt_correct_test_state123_model <- lmer(data = linreg_test_state123_rt_correct_df, -->

<!--                                  RT ~ group*version*condition*correct + (1 | ID), -->

<!--                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!--                                  REML = FALSE) -->

<!-- rt_correct_test_state123_model_rs <- lmer(data = linreg_test_state123_rt_correct_df, -->

<!--                                  RT ~ group*version*condition*correct + (1 + condition | ID), -->

<!--                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!--                                  REML = FALSE) -->

<!-- rt_correct_test_state123_model_rs2 <- lmer(data = linreg_test_state123_rt_correct_df, -->

<!--                                  RT ~ group*version*condition*correct + (1 + condition + correct | ID), -->

<!--                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!--                                  REML = FALSE) -->

<!-- anova(rt_correct_test_state123_model, rt_correct_test_state123_model_rs, rt_correct_test_state123_model_rs2) -->

<!-- tab_model(rt_correct_test_state123_model_rs2, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- # Time effects on reaction times -->

<!-- ## RT in state 1 per condition -->

<!-- ### Plot -->

<!-- ```{r} -->

<!-- # get percent correct over time -->

<!-- test_rt_group_version_condition_time_df <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state %in% c(1), -->

<!--          correct == 1, -->

<!--          ) %>% -->

<!--   group_by(group, version, condition, trial) %>% -->

<!--   summarise(mean_rt = mean(RT, na.rm = TRUE), -->

<!--             se_rt = sd(RT, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(RT, na.rm=TRUE)[2], -->

<!--             ci_u = ci(RT, na.rm=TRUE)[3], -->

<!--             n = n() -->

<!--             ) -->

<!-- test_rt_group_version_condition_time_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 14, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- ggplot(test_rt_group_version_condition_time_df, aes(x=trial, y=mean_rt)) + -->

<!--   geom_line(aes(color=condition), size=1) + -->

<!--   geom_ribbon(aes(ymin = ci_l, ymax = ci_u, fill = condition), alpha = 0.2) + -->

<!--   scale_y_continuous(limits = c(0, 3000)) + -->

<!--   facet_grid(vars(group), vars(version)) + -->

<!--   theme_light(base_size = 16) + -->

<!--   xlab("Accumulated state 1 visits") + -->

<!--   ylab("% Correct paths") + -->

<!--   theme(legend.title = element_blank()) + -->

<!--   scale_color_viridis(option = "viridis", discrete = TRUE) + -->

<!--   scale_fill_viridis(option = "viridis", discrete = TRUE) -->

<!-- ``` -->

<!-- ### Linear regression -->

<!-- ```{r} -->

<!-- linreg_test_state1_rt_df <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state %in% c(1), -->

<!--          correct == 1, -->

<!--          ) %>% -->

<!--   mutate(condition = as.factor(condition), -->

<!--          group = as.factor(group), -->

<!--          version = as.factor(version), -->

<!--          trial = trial-1) %>% -->

<!--   select(ID, -->

<!--          RT, -->

<!--          condition, -->

<!--          group, -->

<!--          version, -->

<!--          trial) -->

<!-- contrasts(linreg_test_state1_rt_df$condition) <- contr.treatment(5, base = 5) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- rt_test_state1_model <- lmer(data = linreg_test_state1_rt_df, -->

<!--                                  RT ~ group*version*condition*trial + (1 + condition| ID), -->

<!--                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!--                                  REML = FALSE) -->

<!-- rt_test_state1_model_rs <- lmer(data = linreg_test_state1_rt_df, -->

<!--                                  RT ~ group*version*condition*trial + (1 + condition + trial | ID), -->

<!--                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!--                                  REML = FALSE) -->

<!-- anova(rt_test_state1_model, rt_test_state1_model_rs) -->

<!-- tab_model(rt_test_state1_model_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->
