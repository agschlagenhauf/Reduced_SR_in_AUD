---
title: "Reduced Successor Representation in AUD"
subtitle: "Conformatory and exploratory behavioral data analyses"
doi: "https://doi.org/10.17605/OSF.IO/9TUZE"
author: "Milena Musial"
date: 09/25/2024
format: html
editor: visual
toc: TRUE
code-fold: TRUE
number-sections: TRUE
embed-resources: true
execute: 
  warning: FALSE
editor_options: 
  chunk_output_type: console
---

# Set up

```{r}
rm(list = ls(all = TRUE))

# Load packages
packages <- c("ggplot2", "dplyr", "tidyr", "kableExtra", "gmodels", "lme4", "sjPlot", "viridis", "forcats", "lmerTest", "car")
#install.packages(packages)
sapply(packages, require, character.only = TRUE)

# set color scheme

# define paths
data_path <- "~/work/group_folder/B01_FP2_WP3/WP3_DATA/FINAL_STUDY/RDFs"
#data_path <- "~/Library/CloudStorage/OneDrive-Charité-UniversitätsmedizinBerlin/PhD/04_B01/WP3/WP3_DATA/FINAL_STUDY/RDFs"

# read dfs
load(file.path(data_path, "final_data_complete.RData"))
load(file.path(data_path, "demo_psych_data.RData"))

# format demo_psych df factors
# rename & reorder
demo_psych <- demo_psych %>%
  mutate(version = case_when(
    version == "alcohol" ~ "Alcohol version",
    version == "control" ~ "Monetary version"
  ),
  group = case_when(
    group == "harmful" ~ "Harmful drinkers",
    group == "low-risk" ~ "Low-risk drinkers"
  ))%>%
  mutate(version = fct_relevel(version,
                               c("Monetary version",
                                 "Alcohol version")),
         group = fct_relevel(group,
                             c("Low-risk drinkers",
                               "Harmful drinkers")))

```

# Exclusion

## Complete sample

```{r}
summary <- trial_df %>%
  select(ID, group, version)

summary <- unique(summary)

summary <- summary %>%
  group_by(group, version) %>%
  summarise(n = n())

summary %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

## Preregistered exclusion criterion 1: Inconsistent AUDIT scores

```{r}
audit_inconsistent_df <- demo_psych %>%
  select(prolific_ID, group, version, audit_sum_pre, audit_sum_post) %>%
  mutate(audit_consistent = ifelse(((audit_sum_pre > 7 & audit_sum_post > 7) | (audit_sum_pre < 8 & audit_sum_post < 8)), 1, 0)) %>%
  filter(audit_consistent == 0) %>%
  arrange(group, version)
```

### Percent excluded

```{r}
percent_IDs_excluded <- length(unique(audit_inconsistent_df$prolific_ID))/length(demo_psych$prolific_ID)
percent_IDs_excluded*100
```

### Excluded subjects per group and version

```{r}
audit_inconsistent_df_summary <- audit_inconsistent_df %>%
  group_by(group, version) %>%
  summarise(n = n())

audit_inconsistent_df_summary %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

### Apply exclusion

```{r}
trial_df <- trial_df %>%
  filter(! ID %in% audit_inconsistent_df$prolific_ID,
         preserve = TRUE)

component_df <- component_df %>%
  filter(! ID %in% audit_inconsistent_df$prolific_ID,
         preserve = TRUE)

rating_df <- rating_df %>%
  filter(! ID %in% audit_inconsistent_df$prolific_ID,
         preserve = TRUE)

demo_psych <- demo_psych %>%
  filter(! prolific_ID %in% audit_inconsistent_df$prolific_ID,
         preserve = TRUE)
```

## Preregistered exclusion criterion 2: Correct path taken in less than 3 out of the last 5 learning phase trials in any of the 5 conditions

```{r}
# get last paths
learning_paths_last5_df <- trial_df %>%
  filter(phase == "learning",
         state == 1) %>%
  group_by(ID, component) %>%
  slice_tail(n=5)

# who does not pass criterion
learning_paths_last5_correct_component_df <- learning_paths_last5_df %>%
  group_by(ID, group, version, component, condition_index, condition, environment) %>%
  summarise(sum_correct = sum(correct_path))

learning_paths_last5_correct_component_df_excl <- learning_paths_last5_correct_component_df %>%
  filter(sum_correct < 3) %>%
  mutate(ID_condition_combo = paste(ID, "-", condition, sep="")) %>%
  distinct()

excluded_components <- learning_paths_last5_correct_component_df_excl$ID_condition_combo

percent_component_excluded <- length(excluded_components)/nrow(learning_paths_last5_correct_component_df)

# excluded subjects
excluded_IDs <- unique(learning_paths_last5_correct_component_df_excl$ID)

percent_IDs_excluded <- length(excluded_IDs)/length(unique(learning_paths_last5_correct_component_df$ID))
```

### Percent excluded

-   \% excluded IDs

```{r}
percent_IDs_excluded*100
```

### Excluded participants per group and version

```{r}
learning_paths_last5_correct_subject_df_excl_summary <- learning_paths_last5_correct_component_df_excl %>%
  ungroup() %>%
  select(ID, group, version) %>%
  distinct() %>%
  group_by(group, version) %>%
  summarise(n = n())

learning_paths_last5_correct_subject_df_excl_summary %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

### Excluded components per group and version

```{r}
learning_correct_group_version_df_excl <- learning_paths_last5_correct_component_df_excl %>%
  group_by(group, version) %>%
  summarise(n = n()
            )

learning_correct_group_version_df_excl %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

### Excluded components per condition

```{r}
learning_correct_condition_df_excl <- learning_paths_last5_correct_component_df_excl %>%
  group_by(condition) %>%
  summarise(n = n()
            )

learning_correct_condition_df_excl %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

### Excluded components per component index

```{r}
learning_correct_component_index_df_excl <- learning_paths_last5_correct_component_df_excl %>%
  group_by(condition_index) %>%
  summarise(n = n()
            )

learning_correct_component_index_df_excl %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

### Excluded components per environment

```{r}
learning_correct_component_environment_df_excl <- learning_paths_last5_correct_component_df_excl %>%
  group_by(environment) %>%
  summarise(n = n()
            )

learning_correct_component_environment_df_excl %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

## Apply exclusion

```{r}
trial_df <- trial_df %>%
  filter(! ID %in% excluded_IDs,
         preserve = TRUE) %>%
  arrange(ID,
          condition_index,
          phase,
          trial,
          state_index)

component_df <- component_df %>%
  filter(! ID %in% excluded_IDs,
         preserve = TRUE)

rating_df <- rating_df %>%
  filter(! ID %in% excluded_IDs,
         preserve = TRUE)

demo_psych <- demo_psych %>%
  filter(! prolific_ID %in% excluded_IDs,
         preserve = TRUE)

save(demo_psych, file = file.path(data_path, "demo_psych_data_included.RData"))
save(trial_df, component_df, rating_df, file = file.path(data_path, "final_data_included.RData"))
```

### Further analyses based on (according to preregistered criteria)

```{r}
summary <- component_df %>%
  select(ID, group, version)

summary <- unique(summary)

summary <- summary %>%
  group_by(group, version) %>%
  summarise(n = n())

summary %>%
  kable("html") %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

## Balancing checks

### Condition index per condition

```{r}
# get percent correct over time
balancing_df <- component_df %>%
  mutate(condition_index = as.factor(condition_index),
         condition = as.factor(condition)) %>%
  filter(phase == "learning"
         ) %>%
  filter(! condition == "other") %>%
  droplevels() %>%
  unique() %>%
  select(ID, group, version, condition, condition_index, environment)

index_summary <- balancing_df %>%
  group_by(group, version, condition, condition_index) %>%
  summarise(n = n()
            )
index_summary %>%
  kable("html") %>%
  kable_styling(font_size = 14,
                latex_options = "scale_down")
```

```{r}
ggplot(balancing_df, aes(x=condition, fill=condition_index)) +
  geom_bar() +
  geom_text(stat = "count", aes(label = ..count..),
            position = position_stack(vjust = 0.5), size = 4) +
  facet_grid(vars(group), vars(version)) +
  theme_light(base_size = 16) +
  theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) +
  scale_fill_viridis(option = "plasma", discrete = TRUE)
```

### Environment per condition

```{r}
# get percent correct over time
environment_summary <- balancing_df %>%
  group_by(group, version, condition, environment) %>%
  summarise(n = n()
            )

environment_summary %>%
  kable("html") %>%
  kable_styling(font_size = 14,
                latex_options = "scale_down")
```

```{r}
balancing_df %>%
  ggplot(aes(x=condition, fill=environment)) +
  geom_bar() +
  geom_text(stat = "count", aes(label = ..count..),
            position = position_stack(vjust = 0.5), size = 4) +
  facet_grid(vars(group), vars(version), scales = "free_x") +
  theme_light(base_size = 16) +
  theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) +
  scale_fill_viridis(option = "turbo", discrete = TRUE)
```

```{r}
# Chi-square tests
env_table <- balancing_df %>%
  filter(group == "harmful" & version == "alcohol") %>%
  droplevels()
chisq.test(table(env_table$condition, env_table$environment), simulate.p.value = F)

env_table <- balancing_df %>%
  filter(group == "harmful" & version == "control") %>%
  droplevels()
chisq.test(table(env_table$condition, env_table$environment), simulate.p.value = F)

env_table <- balancing_df %>%
  filter(group == "low-risk" & version == "alcohol") %>%
  droplevels()
chisq.test(table(env_table$condition, env_table$environment), simulate.p.value = F)

env_table <- balancing_df %>%
  filter(group == "low-risk" & version == "control") %>%
  droplevels()
chisq.test(table(env_table$condition, env_table$environment), simulate.p.value = F)
```

# Payment criterion

```{r}

payment_df <- trial_df %>%
  group_by(group, version, ID) %>%
  summarise(mean_correct = mean(correct_path, na.rm = TRUE))

payment_df[payment_df$version=="Alcohol version" & 
             payment_df$group=="Low-risk drinkers",] %>%
  arrange(-mean_correct)

payment_df[payment_df$version=="Alcohol version" & 
             payment_df$group=="Harmful drinkers",] %>%
  arrange(-mean_correct)

payment_df[payment_df$version=="Monetary version" & 
             payment_df$group=="Low-risk drinkers",] %>%
  arrange(-mean_correct)

payment_df[payment_df$version=="Monetary version" & 
             payment_df$group=="Harmful drinkers",] %>%
  arrange(-mean_correct)

```
