---
title: "Reduced Successor Representation in AUD"
subtitle: "Conformatory and exploratory behavioral data analyses"
doi: "https://doi.org/10.17605/OSF.IO/9TUZE"
author: "Milena Musial"
date: 09/25/2024
format: html
editor: visual
toc: TRUE
code-fold: TRUE
number-sections: TRUE
embed-resources: true
execute: 
  warning: FALSE
editor_options: 
  chunk_output_type: console
---

# Set up

```{r}
rm(list = ls(all = TRUE))

# Load packages
packages <- c("ggplot2", "dplyr", "tidyr", "kableExtra", "gmodels", "lme4", "sjPlot", "viridis", "forcats", "lmerTest", "car", "PerformanceAnalytics", "emmeans", "corrplot", "Hmisc", "ggpubr")
#install.packages(packages)
sapply(packages, require, character.only = TRUE)

# set color scheme
custom_colors <- viridis(5, option = "magma")[c(1, 2, 3, 4, 5)]

# define paths
#data_path <- "~/work/group_folder/B01_FP2_WP3/WP3_DATA/FINAL_STUDY/RDFs"
data_path <- "~/Library/CloudStorage/OneDrive-Charité-UniversitätsmedizinBerlin/PhD/04_B01/WP3/WP3_DATA/FINAL_STUDY/RDFs"
model_path <- "/Users/milenamusial/Library/CloudStorage/OneDrive-Charité-UniversitätsmedizinBerlin/PhD/04_B01/WP3/WP3_DATA/FINAL_STUDY/model_objects"

# read dfs
load(file.path(data_path, "final_data_included.RData"))
load(file.path(data_path, "demo_psych_data_included.RData"))

```

\
\
\

#### Inspect relation SR use - psychometric measures

```{r}
# load model
model3_rs_vers <- readRDS(file.path(model_path, "model3_rs_vers_switch.rds"))

# get fixed effects
fixed_effects <- fixef(model3_rs_vers)

# extract individual slopes for condition (contrast reward vs. transition)
random_slopes <- coef(model3_rs_vers)$ID[,"condition1"]

# create binary group and version variables
dummies <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(group_binary = ifelse(group == "Harmful drinkers", 1, 0),
         version_binary = ifelse(version == "Alcohol version", 1, 0)) %>%
  dplyr::select(group_binary, version_binary)

# calculate individual adjusted slopes for condition (contrast reward vs. transition)
individual_sr_slopes <- fixed_effects["condition1"] +  # Main effect of condition 1
                    fixed_effects["groupHarmful drinkers:condition1"] * dummies$group_binary +  # Adjust for group interaction
                    fixed_effects["versionAlcohol version:condition1"] * dummies$version_binary +  # Adjust for version interaction
                    fixed_effects["groupHarmful drinkers:versionAlcohol version:condition1"] * (dummies$group_binary * dummies$version_binary) +  # Three-way interaction
                    random_slopes  # Add individual deviations

# select data to correlate with and calculate corrected p-values
correlation_df_monetary <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(sr_use = individual_sr_slopes) %>%
  filter(version == "Monetary version") %>%
  dplyr::select(audit_sum_pre, aud_sum, drinking_days, drinks_per_day, binge_days, casa_gf_unaware, casa_gf_nonvolitional, uppsp_total, oci_total, sr_use)

r.values <- rcorr(as.matrix(correlation_df_monetary), type="spearman")$r[1:9,"sr_use"]
r.values
p.values <- rcorr(as.matrix(correlation_df_monetary), type="spearman")$P[1:9,"sr_use"]
p.adjust(p.values, method = "BH", n = length(p.values))

correlation_df_alcohol <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(sr_use = individual_sr_slopes) %>%
  filter(version == "Alcohol version") %>%
  select(audit_sum_pre, aud_sum, drinking_days, drinks_per_day, binge_days, casa_gf_unaware, casa_gf_nonvolitional, uppsp_total, oci_total, sr_use)

r.values <- rcorr(as.matrix(correlation_df_alcohol), type="spearman")$r[1:9,"sr_use"]
r.values
p.values <- rcorr(as.matrix(correlation_df_alcohol), type="spearman")$P[1:9,"sr_use"]
p.adjust(p.values, method = "BH", n = length(p.values))

```

```{r}
correlation_plot_df <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(sr_use = individual_sr_slopes)

binge_plot <- ggplot(correlation_plot_df, aes(x = binge_days, y = sr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.2, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Binge days / past 3 months", limits = c(0, 90)) +
    scale_y_continuous("Individual SR use", limits = c(0, 13)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
binge_plot

audit_plot <- ggplot(correlation_plot_df, aes(x = audit_sum_pre, y = sr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.2, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("AUDIT score", limits = c(0, 35)) +
    scale_y_continuous("Individual SR use", limits = c(0, 13)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
audit_plot

aud_plot <- ggplot(correlation_plot_df, aes(x = aud_sum, y = sr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.2, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("AUD criteria", limits = c(0, 10)) +
    scale_y_continuous("Individual SR use", limits = c(0, 13)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
aud_plot

drinking_days_plot <- ggplot(correlation_plot_df, aes(x = drinking_days, y = sr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.2, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Drinking days / past 3 months", limits = c(0, 92)) +
    scale_y_continuous("Individual SR use", limits = c(0, 13)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
drinking_days_plot

drinks_per_day_plot <- ggplot(correlation_plot_df, aes(x = drinks_per_day, y = sr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.2, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Drinks / drinking day / past 3 months", limits = c(0, 50)) +
    scale_y_continuous("Individual SR use", limits = c(0, 13)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
drinks_per_day_plot

casa_unaware_plot <- ggplot(correlation_plot_df, aes(x = casa_gf_unaware, y = sr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.2, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("CASA unaware", limits = c(0, 11)) +
    scale_y_continuous("Individual SR use", limits = c(0, 13)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
casa_unaware_plot

casa_nonvolitional_plot <- ggplot(correlation_plot_df, aes(x = casa_gf_nonvolitional, y = sr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.2, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("CASA nonvolitional", limits = c(0, 10)) +
    scale_y_continuous("Individual SR use", limits = c(0, 13)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
casa_nonvolitional_plot

uppsp_plot <- ggplot(correlation_plot_df, aes(x = uppsp_total, y = sr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.2, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("UPPSP score", limits = c(1, 3.5)) +
    scale_y_continuous("Individual SR use", limits = c(0, 13)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
uppsp_plot

oci_plot <- ggplot(correlation_plot_df, aes(x = oci_total, y = sr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.2, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("OCI-R score", limits = c(0, 65)) +
    scale_y_continuous("Individual SR use", limits = c(0, 13)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
oci_plot

# combined plot
sr_plot <- ggarrange(audit_plot, aud_plot, binge_plot, drinking_days_plot, drinks_per_day_plot, casa_unaware_plot, casa_nonvolitional_plot, uppsp_plot, oci_plot,
                     common.legend = TRUE, legend = "top")
sr_plot
```

#### Inspect relation reduced SR use - psychometric measures

```{r}
model5_rs_vers <- readRDS(file.path(model_path, "model5_rs_vers_switch.rds"))

# get fixed effects
fixed_effects <- fixef(model5_rs_vers)

# extract individual slopes for condition (contrast goal-state vs. reward)
random_slopes <- coef(model5_rs_vers)$ID[,"condition2"]

# create binary group and version variables
dummies <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(group_binary = ifelse(group == "Harmful drinkers", 1, 0),
         version_binary = ifelse(version == "Alcohol version", 1, 0)) %>%
  dplyr::select(group_binary, version_binary)

# calculate individual adjusted slopes for condition (contrast reward vs. transition)
individual_redsr_slopes <- fixed_effects["condition2"] +  # Main effect of condition 1
                    fixed_effects["groupHarmful drinkers:condition2"] * dummies$group_binary +  # Adjust for group interaction
                    fixed_effects["versionAlcohol version:condition2"] * dummies$version_binary +  # Adjust for version interaction
                    fixed_effects["groupHarmful drinkers:versionAlcohol version:condition2"] * (dummies$group_binary * dummies$version_binary) +  # Three-way interaction
                    random_slopes  # Add individual deviations

# invert values
individual_redsr_slopes <- individual_redsr_slopes*-1

# select data to correlate with and calculate corrected p-values
correlation_df_monetary <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(redsr_use = individual_redsr_slopes) %>%
  filter(version == "Monetary version") %>%
  dplyr::select(audit_sum_pre, aud_sum, drinking_days, drinks_per_day, binge_days, casa_gf_unaware, casa_gf_nonvolitional, uppsp_total, oci_total, redsr_use)

r.values <- rcorr(as.matrix(correlation_df_monetary), type="spearman")$r[1:9,"redsr_use"]
r.values
p.values <- rcorr(as.matrix(correlation_df_monetary), type="spearman")$P[1:9,"redsr_use"]
p.adjust(p.values, method = "BH", n = length(p.values))

correlation_df_alcohol <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(redsr_use = individual_redsr_slopes) %>%
  filter(version == "Alcohol version") %>%
  dplyr::select(audit_sum_pre, aud_sum, drinking_days, drinks_per_day, binge_days, casa_gf_unaware, casa_gf_nonvolitional, uppsp_total, oci_total, redsr_use)

r.values <- rcorr(as.matrix(correlation_df_alcohol), type="spearman")$r[1:9,"redsr_use"]
r.values
p.values <- rcorr(as.matrix(correlation_df_alcohol), type="spearman")$P[1:9,"redsr_use"]
p.adjust(p.values, method = "BH", n = length(p.values))

```

```{r}
correlation_plot_df <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(redsr_use = individual_redsr_slopes)

binge_plot <- ggplot(correlation_plot_df, aes(x = binge_days, y = redsr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Binge days / past 3 months", limits = c(0, 90)) +
    scale_y_continuous("Individual reduced SR use", limits = c(-6, 6)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
binge_plot

audit_plot <- ggplot(correlation_plot_df, aes(x = audit_sum_pre, y = redsr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("AUDIT score", limits = c(0, 35)) +
    scale_y_continuous("Individual reduced SR use", limits = c(-6, 6)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
audit_plot

aud_plot <- ggplot(correlation_plot_df, aes(x = aud_sum, y = redsr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("AUD criteria", limits = c(0, 10)) +
    scale_y_continuous("Individual reduced SR use", limits = c(-6, 6)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
aud_plot

drinking_days_plot <- ggplot(correlation_plot_df, aes(x = drinking_days, y = redsr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Drinking days / past 3 months", limits = c(0, 92)) +
    scale_y_continuous("Individual reduced SR use", limits = c(-6, 6)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
drinking_days_plot

drinks_per_day_plot <- ggplot(correlation_plot_df, aes(x = drinks_per_day, y = redsr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Drinks / drinking day / past 3 months", limits = c(0, 50)) +
    scale_y_continuous("Individual reduced SR use", limits = c(-6, 6)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
drinks_per_day_plot

casa_unaware_plot <- ggplot(correlation_plot_df, aes(x = casa_gf_unaware, y = redsr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("CASA unaware", limits = c(0, 11)) +
    scale_y_continuous("Individual reduced SR use", limits = c(-6, 6)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
casa_unaware_plot

casa_nonvolitional_plot <- ggplot(correlation_plot_df, aes(x = casa_gf_nonvolitional, y = redsr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("CASA nonvolitional", limits = c(0, 10)) +
    scale_y_continuous("Individual reduced SR use", limits = c(-6, 6)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
casa_nonvolitional_plot

uppsp_plot <- ggplot(correlation_plot_df, aes(x = uppsp_total, y = redsr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("UPPSP score", limits = c(1, 3.5)) +
    scale_y_continuous("Individual reduced SR use", limits = c(-6, 6)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
uppsp_plot

oci_plot <- ggplot(correlation_plot_df, aes(x = oci_total, y = redsr_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("OCI-R score", limits = c(0, 65)) +
    scale_y_continuous("Individual reduced SR use", limits = c(-6, 6)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
oci_plot

# combined plot
redsr_plot <- ggarrange(audit_plot, aud_plot, binge_plot, drinking_days_plot, drinks_per_day_plot, casa_unaware_plot, casa_nonvolitional_plot, uppsp_plot, oci_plot,
                     common.legend = TRUE, legend = "top")
redsr_plot
```

#### Inspect relation MB use - psychometric measures

```{r}
model3_rs_vers <- readRDS(file.path(model_path, "model3_rs_vers_switch.rds"))

# get fixed effects
fixed_effects <- fixef(model3_rs_vers)

# extract individual slopes for condition (contrast transition vs. control)
random_slopes <- coef(model3_rs_vers)$ID[,"condition5"]

# create binary group and version variables
dummies <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(group_binary = ifelse(group == "Harmful drinkers", 1, 0),
         version_binary = ifelse(version == "Alcohol version", 1, 0)) %>%
  dplyr::select(group_binary, version_binary)

# calculate individual adjusted slopes for condition (contrast reward vs. transition)
individual_mb_slopes <- fixed_effects["condition5"] +
                    fixed_effects["groupHarmful drinkers:condition5"] * dummies$group_binary +  
                    fixed_effects["versionAlcohol version:condition5"] * dummies$version_binary +
                    fixed_effects["groupHarmful drinkers:versionAlcohol version:condition5"] * (dummies$group_binary * dummies$version_binary) + 
                    random_slopes  # Add individual deviations

# invert values
individual_mb_slopes <- individual_mb_slopes*-1

# select data to correlate with and calculate corrected p-values
correlation_df_monetary <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(mb_use = individual_mb_slopes) %>%
  filter(version == "Monetary version") %>%
  dplyr::select(audit_sum_pre, aud_sum, drinking_days, drinks_per_day, binge_days, casa_gf_unaware, casa_gf_nonvolitional, uppsp_total, oci_total, mb_use)

r.values <- rcorr(as.matrix(correlation_df_monetary), type="spearman")$r[1:9,"mb_use"]
r.values
p.values <- rcorr(as.matrix(correlation_df_monetary), type="spearman")$P[1:9,"mb_use"]
p.adjust(p.values, method = "BH", n = length(p.values))

correlation_df_alcohol <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(mb_use = individual_mb_slopes) %>%
  filter(version == "Alcohol version") %>%
  dplyr::select(audit_sum_pre, aud_sum, drinking_days, drinks_per_day, binge_days, casa_gf_unaware, casa_gf_nonvolitional, uppsp_total, oci_total, mb_use)

r.values <- rcorr(as.matrix(correlation_df_alcohol), type="spearman")$r[1:9,"mb_use"]
r.values
p.values <- rcorr(as.matrix(correlation_df_alcohol), type="spearman")$P[1:9,"mb_use"]
p.adjust(p.values, method = "BH", n = length(p.values))

```

```{r}
correlation_plot_df <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(mb_use = individual_mb_slopes)

binge_plot <- ggplot(correlation_plot_df, aes(x = binge_days, y = mb_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Binge days / past 3 months", limits = c(0, 90)) +
    scale_y_continuous("Individual MB use", limits = c(-7, 15)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
binge_plot

audit_plot <- ggplot(correlation_plot_df, aes(x = audit_sum_pre, y = mb_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("AUDIT score", limits = c(0, 35)) +
    scale_y_continuous("Individual MB use", limits = c(-7, 15)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
audit_plot

aud_plot <- ggplot(correlation_plot_df, aes(x = aud_sum, y = mb_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("AUD criteria", limits = c(0, 10)) +
    scale_y_continuous("Individual MB use", limits = c(-7, 15)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
aud_plot

drinking_days_plot <- ggplot(correlation_plot_df, aes(x = drinking_days, y = mb_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Drinking days / past 3 months", limits = c(0, 92)) +
    scale_y_continuous("Individual MB use", limits = c(-7, 15)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
drinking_days_plot

drinks_per_day_plot <- ggplot(correlation_plot_df, aes(x = drinks_per_day, y = mb_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Drinks / drinking day / past 3 months", limits = c(0, 50)) +
    scale_y_continuous("Individual MB use", limits = c(-7, 15)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
drinks_per_day_plot

casa_unaware_plot <- ggplot(correlation_plot_df, aes(x = casa_gf_unaware, y = mb_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("CASA unaware", limits = c(0, 11)) +
    scale_y_continuous("Individual MB use", limits = c(-7, 15)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
casa_unaware_plot

casa_nonvolitional_plot <- ggplot(correlation_plot_df, aes(x = casa_gf_nonvolitional, y = mb_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("CASA nonvolitional", limits = c(0, 10)) +
    scale_y_continuous("Individual MB use", limits = c(-7, 15)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
casa_nonvolitional_plot

uppsp_plot <- ggplot(correlation_plot_df, aes(x = uppsp_total, y = mb_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("UPPSP score", limits = c(1, 3.5)) +
    scale_y_continuous("Individual MB use", limits = c(-7, 15)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
uppsp_plot

oci_plot <- ggplot(correlation_plot_df, aes(x = oci_total, y = mb_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("OCI-R score", limits = c(0, 65)) +
    scale_y_continuous("Individual MB use", limits = c(-7, 15)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
oci_plot

# combined plot
mb_plot <- ggarrange(audit_plot, aud_plot, binge_plot, drinking_days_plot, drinks_per_day_plot, casa_unaware_plot, casa_nonvolitional_plot, uppsp_plot, oci_plot,
                     common.legend = TRUE, legend = "top")
mb_plot
```

#### Inspect relation MF use - psychometric measures

```{r}
model5_rs_vers <- readRDS(file.path(model_path, "model5_rs_vers_switch.rds"))

# get fixed effects
fixed_effects <- fixef(model5_rs_vers)

# extract individual slopes for condition (contrast transition vs. control)
random_slopes <- coef(model5_rs_vers)$ID[,"condition5"]

# create binary group and version variables
dummies <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(group_binary = ifelse(group == "Harmful drinkers", 1, 0),
         version_binary = ifelse(version == "Alcohol version", 1, 0)) %>%
  dplyr::select(group_binary, version_binary)

# calculate individual adjusted slopes for condition (contrast reward vs. transition)
individual_mf_slopes <- fixed_effects["condition5"] +
                    fixed_effects["groupHarmful drinkers:condition5"] * dummies$group_binary +  
                    fixed_effects["versionAlcohol version:condition5"] * dummies$version_binary +
                    fixed_effects["groupHarmful drinkers:versionAlcohol version:condition5"] * (dummies$group_binary * dummies$version_binary) + 
                    random_slopes  # Add individual deviations

# select data to correlate with and calculate corrected p-values
correlation_df_monetary <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(mf_use = individual_mf_slopes) %>%
  filter(version == "Monetary version") %>%
  dplyr::select(audit_sum_pre, aud_sum, drinking_days, drinks_per_day, binge_days, casa_gf_unaware, casa_gf_nonvolitional, uppsp_total, oci_total, mf_use)

r.values <- rcorr(as.matrix(correlation_df_monetary), type="spearman")$r[1:9,"mf_use"]
r.values
p.values <- rcorr(as.matrix(correlation_df_monetary), type="spearman")$P[1:9,"mf_use"]
p.adjust(p.values, method = "BH", n = length(p.values))

correlation_df_alcohol <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(mf_use = individual_mf_slopes) %>%
  filter(version == "Alcohol version") %>%
  dplyr::select(audit_sum_pre, aud_sum, drinking_days, drinks_per_day, binge_days, casa_gf_unaware, casa_gf_nonvolitional, uppsp_total, oci_total, mf_use)

r.values <- rcorr(as.matrix(correlation_df_alcohol), type="spearman")$r[1:9,"mf_use"]
r.values
p.values <- rcorr(as.matrix(correlation_df_alcohol), type="spearman")$P[1:9,"mf_use"]
p.adjust(p.values, method = "BH", n = length(p.values))

```

```{r}
correlation_plot_df <- demo_psych %>%
  arrange(prolific_ID) %>%
  mutate(mf_use = individual_mf_slopes)

binge_plot <- ggplot(correlation_plot_df, aes(x = binge_days, y = mf_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Binge days / past 3 months", limits = c(0, 90)) +
    scale_y_continuous("Individual MF use", limits = c(-20, 0)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
binge_plot

audit_plot <- ggplot(correlation_plot_df, aes(x = audit_sum_pre, y = mf_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("AUDIT score", limits = c(0, 35)) +
    scale_y_continuous("Individual MF use", limits = c(-20, 0)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
audit_plot

aud_plot <- ggplot(correlation_plot_df, aes(x = aud_sum, y = mf_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("AUD criteria", limits = c(0, 10)) +
    scale_y_continuous("Individual MF use", limits = c(-20, 0)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
aud_plot

drinking_days_plot <- ggplot(correlation_plot_df, aes(x = drinking_days, y = mf_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Drinking days / past 3 months", limits = c(0, 92)) +
    scale_y_continuous("Individual MF use", limits = c(-20, 0)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
drinking_days_plot

drinks_per_day_plot <- ggplot(correlation_plot_df, aes(x = drinks_per_day, y = mf_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("Drinks / drinking day / past 3 months", limits = c(0, 50)) +
    scale_y_continuous("Individual MF use", limits = c(-20, 0)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
drinks_per_day_plot

casa_unaware_plot <- ggplot(correlation_plot_df, aes(x = casa_gf_unaware, y = mf_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("CASA unaware", limits = c(0, 11)) +
    scale_y_continuous("Individual MF use", limits = c(-20, 0)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
casa_unaware_plot

casa_nonvolitional_plot <- ggplot(correlation_plot_df, aes(x = casa_gf_nonvolitional, y = mf_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("CASA nonvolitional", limits = c(0, 10)) +
    scale_y_continuous("Individual MF use", limits = c(-20, 0)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
casa_nonvolitional_plot

uppsp_plot <- ggplot(correlation_plot_df, aes(x = uppsp_total, y = mf_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("UPPSP score", limits = c(1, 3.5)) +
    scale_y_continuous("Individual MF use", limits = c(-20, 0)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
uppsp_plot

oci_plot <- ggplot(correlation_plot_df, aes(x = oci_total, y = mf_use)) +
    geom_point(aes(color = version)) +  # Color by version, shape by group
    geom_smooth(aes(color = version, fill=version), method = 'lm', alpha = 0.1, size=1.3) +  # Color by version, linetype by group
    scale_x_continuous("OCI-R score", limits = c(0, 65)) +
    scale_y_continuous("Individual MF use", limits = c(-20, 0)) +
    scale_color_viridis(option = "turbo", discrete = TRUE, name = "Version") +  # Color legend for version
    scale_fill_viridis(option = "turbo", discrete = TRUE) +  # Color legend for version
    theme_light(base_size = 12) +
    theme(legend.position = "bottom") +
    guides(
      color = guide_legend(order = 1, override.aes = list(size = 0)),  # Version legend comes first
      fill = "none")
oci_plot

# combined plot
mf_plot <- ggarrange(audit_plot, aud_plot, binge_plot, drinking_days_plot, drinks_per_day_plot, casa_unaware_plot, casa_nonvolitional_plot, uppsp_plot, oci_plot,
                     common.legend = TRUE, legend = "top")
mf_plot
```
