---
title: "Learning phase analysis"
doi: "https://doi.org/10.17605/OSF.IO/9TUZE"
author: "Milena Musial"
date: 08/03/2025
format: html
editor: visual
toc: TRUE
code-fold: TRUE
warning: FALSE
number-sections: TRUE
embed-resources: true
execute: 
  warning: FALSE
editor_options: 
  chunk_output_type: console
---

# Set up

```{r}
rm(list = ls(all = TRUE))

# Load packages
packages <- c("ggplot2", "dplyr", "tidyr", "kableExtra", "gmodels", "lme4", "sjPlot", "viridis", "forcats", "lmerTest", "car")
#install.packages(packages)
invisible(lapply(packages, require, character.only = TRUE))

# set color scheme

# define paths
#data_path <- "~/work/group_folder/B01_FP2_WP3/WP3_DATA/FINAL_STUDY/RDFs"
data_path <- "~/Library/CloudStorage/OneDrive-Charité-UniversitätsmedizinBerlin/PhD/04_B01/WP3/WP3_DATA/FINAL_STUDY/RDFs"
model_path <- "/Users/milenamusial/Library/CloudStorage/OneDrive-Charité-UniversitätsmedizinBerlin/PhD/04_B01/WP3/WP3_DATA/FINAL_STUDY/model_objects"
figure_path <- "/Users/milenamusial/Library/CloudStorage/OneDrive-Charité-UniversitätsmedizinBerlin/PhD/04_B01/WP3/Project_Docs/Figures"


# read dfs
load(file.path(data_path, "final_data_included.RData"))
load(file.path(data_path, "demo_psych_data_included.RData"))

```

# Difference in learning performance in last 5 trials (compared to control condition)

## Plot

```{r}
learning_correct_path_group_version_condition_df <- trial_df %>%
  filter(phase == "learning",
         state %in% c(1),
         trial %in% c(20:24)
         ) %>%
  group_by(group, version, condition) %>%
  summarise(mean_correct = mean(correct_path, na.rm = TRUE),
            se_correct = sd(correct_path, na.rm = TRUE)/sqrt(n()),
            ci_l = ci(correct_path, na.rm=TRUE)[2],
            ci_u = ci(correct_path, na.rm=TRUE)[3],
            n = n()
            )

learning_correct_path_group_version_condition_df %>%
  kable("html") %>%
  kable_styling(font_size = 12,
                latex_options = "scale_down")
```

```{r}
supp.labs <- c("Low-risk drinkers", "High-risk drinkers", "Non-alcohol context", "Alcohol context")
names(supp.labs) <- c("Low-risk drinkers", "Harmful drinkers", "Monetary version", "Alcohol version")

# bar plot
ggplot(learning_correct_path_group_version_condition_df, aes(x=condition, y=mean_correct)) +
  geom_bar(stat="identity", aes(fill = condition)) +
  geom_errorbar(aes(ymin=mean_correct-se_correct, ymax=mean_correct+se_correct),
                width=.2,
                position=position_dodge(.9)) +
  facet_grid(vars(group), vars(version), labeller = as_labeller(supp.labs)) +
  scale_y_continuous("Proportion of correct paths", limits = c(0, 1.05)) +
  theme_light(base_size = 16, base_family = "Aptos") +
  theme(legend.position = "none",
        axis.title.x=element_blank(),
        axis.text.x = element_text(angle = 50, vjust = 1, hjust=1, size=16),
        axis.text.y = element_text(size=16),
        strip.text.x = element_text(size = 16),
        strip.text.y = element_text(size = 16)) +
  scale_fill_viridis(option = "viridis", discrete = TRUE)

ggsave(filename = "suppl_learning_average.png", path = figure_path, width = 8, height = 6, device='png', dpi=600)
```

<!-- ## Performance per environment -->

<!-- ```{r} -->

<!-- learning_paths_group_version_environment_df <- trial_df %>% -->

<!--   mutate(group = as.factor(group), -->

<!--          version = as.factor(version), -->

<!--          environment = as.character(environment), -->

<!--          environment = case_match(environment, -->

<!--                                   "alternative" ~ "Alternative bar", -->

<!--                                   "blue floral" ~ "Blue floral apartment", -->

<!--                                   "brauhaus" ~ "Brauhaus", -->

<!--                                   "fancy green" ~ "Fancy green bar", -->

<!--                                   "hip purple" ~ "Hip purple bar", -->

<!--                                   "messy green" ~ "Messy green apartment", -->

<!--                                   "orange tile" ~ "Orange tile apartment", -->

<!--                                   "red brown" ~ "Red brown apartment", -->

<!--                                   "sports bar" ~ "Sports bar", -->

<!--                                   "white modern" ~ "White modern apartment"), -->

<!--          environment=factor(environment, levels=c("Blue floral apartment", "Messy green apartment", "Orange tile apartment", "Red brown apartment", "White modern apartment",  -->

<!--                                                   "Alternative bar", "Brauhaus", "Fancy green bar", "Hip purple bar","Sports bar"))) %>% -->

<!--   filter(phase == "learning", -->

<!--          state %in% c(1) -->

<!--          ) %>% -->

<!--   group_by(environment) %>% -->

<!--   summarise(mean_correct_paths = mean(correct_path, na.rm = TRUE), -->

<!--             se_correct = sd(correct_path, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(correct_path, na.rm=TRUE)[2], -->

<!--             ci_u = ci(correct_path, na.rm=TRUE)[3], -->

<!--             n = n() -->

<!--             ) -->

<!-- learning_paths_group_version_environment_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 14, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # bar plot -->

<!-- ggplot(learning_paths_group_version_environment_df, aes(x=environment, y=mean_correct_paths*100, fill=environment)) + -->

<!--   geom_bar(stat="identity", aes(fill=environment), position=position_dodge()) + -->

<!--   geom_errorbar(aes(ymin=ci_l*100, ymax=ci_u*100), width=.2, position=position_dodge(.9)) + -->

<!--   scale_y_continuous(limits = c(0, 105)) + -->

<!--   #facet_grid(vars(group), vars(version), scales = "free_x") + -->

<!--   xlab("Environment") + -->

<!--   ylab("% Correct paths") + -->

<!--   theme_light(base_size = 16) + -->

<!--   theme(legend.position = "none",, -->

<!--         axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) + -->

<!--   scale_fill_viridis(option = "turbo", discrete = TRUE) -->

<!-- ``` -->

<!-- ## Performance per group, version, condition, environment -->

<!-- ```{r} -->

<!-- learning_paths_group_condition_environment_df <- trial_df %>% -->

<!--   mutate(group = as.factor(group), -->

<!--          version = as.factor(version), -->

<!--          environment = as.character(environment), -->

<!--          environment = case_match(environment, -->

<!--                                   "alternative" ~ "Alternative bar", -->

<!--                                   "blue floral" ~ "Blue floral apartment", -->

<!--                                   "brauhaus" ~ "Brauhaus", -->

<!--                                   "fancy green" ~ "Fancy green bar", -->

<!--                                   "hip purple" ~ "Hip purple bar", -->

<!--                                   "messy green" ~ "Messy green apartment", -->

<!--                                   "orange tile" ~ "Orange tile apartment", -->

<!--                                   "red brown" ~ "Red brown apartment", -->

<!--                                   "sports bar" ~ "Sports bar", -->

<!--                                   "white modern" ~ "White modern apartment"), -->

<!--          environment=factor(environment, levels=c("Blue floral apartment", "Messy green apartment", "Orange tile apartment", "Red brown apartment", "White modern apartment",  -->

<!--                                                   "Alternative bar", "Brauhaus", "Fancy green bar", "Hip purple bar","Sports bar"))) %>% -->

<!--   filter(phase == "learning", -->

<!--          state %in% c(1) -->

<!--          ) %>% -->

<!--   group_by(version, group, environment, condition) %>% -->

<!--   summarise(mean_correct_paths = mean(correct_path, na.rm = TRUE), -->

<!--             se_correct = sd(correct_path, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(correct_path, na.rm=TRUE)[2], -->

<!--             ci_u = ci(correct_path, na.rm=TRUE)[3], -->

<!--             n = n() -->

<!--             ) -->

<!-- learning_paths_group_version_environment_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 14, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # bar plot -->

<!-- ggplot(learning_paths_group_condition_environment_df, aes(x=environment, y=mean_correct_paths*100, fill=condition)) + -->

<!--   geom_bar(stat="identity", aes(fill=condition), position=position_dodge()) + -->

<!--   geom_errorbar(aes(ymin=ci_l*100, ymax=ci_u*100), width=.2, position=position_dodge(.9)) + -->

<!--   scale_y_continuous(limits = c(0, 105)) + -->

<!--   facet_grid(vars(group), vars(version), scales = "free_x") + -->

<!--   xlab("Environment") + -->

<!--   ylab("% Correct paths") + -->

<!--   theme_light(base_size = 16) + -->

<!--   theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) + -->

<!--   scale_fill_viridis(option = "viridis", discrete = TRUE) -->

<!-- ``` -->

## Logistic regression

```{r}
# Set contrasts
contrasts(trial_df$group) <- contr.sum(2)*-0.5
contrasts(trial_df$version) <- contr.sum(2)*-0.5
### contrast for condition changes from analysis to analysis

logreg_learning_correct_paths_group_version_condition_df <- trial_df %>%
  filter(phase == "learning",
         state == 1,
         trial %in% c(20:24)
         ) %>%
  mutate(correct_path = as.factor(correct_path),
         condition = as.factor(condition),
         group = as.factor(group),
         version = as.factor(version),
         environment = as.factor(environment)) %>%
  select(ID,
         trial,
         correct_path,
         condition,
         group,
         version,
         environment)
```

```{r}
contrasts(logreg_learning_correct_paths_group_version_condition_df$condition) <- contr.treatment(5, base = 5)

# log_model_learning_paths_control <- glmer(correct_path ~ group*version*condition + (1 | ID),
#                                           data = logreg_learning_correct_paths_group_version_condition_df,
#                                           family = "binomial",
#                                           control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(log_model_learning_paths_control, file=file.path(model_path, "log_model_learning_paths_control.rds"))
log_model_learning_paths_control <- readRDS(file.path(model_path, "log_model_learning_paths_control.rds"))


# log_model_learning_paths_control_rs <- glmer(correct_path ~ group*version*condition + (1 + condition | ID),
#                                           data = logreg_learning_correct_paths_group_version_condition_df,
#                                           family = "binomial",
#                                           control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)))
# saveRDS(log_model_learning_paths_control_rs, file=file.path(model_path, "log_model_learning_paths_control_rs.rds"))
log_model_learning_paths_control_rs <- readRDS(file.path(model_path, "log_model_learning_paths_control_rs.rds"))

anova(log_model_learning_paths_control, log_model_learning_paths_control_rs)

tab_model(log_model_learning_paths_control_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))
```

<!-- # Reaction times -->

<!-- ## RT in state 1 per condition -->

<!-- ### Plot -->

<!-- ```{r} -->

<!-- RT_state1_condition_df <- trial_df %>% -->

<!--   filter(phase == "learning", -->

<!--          state %in% c(1)) %>% -->

<!--   group_by(group, version, condition) %>% -->

<!--   summarise(mean_RT = mean(RT), -->

<!--             se_RT = sd(RT, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(RT, na.rm=TRUE)[2], -->

<!--             ci_u = ci(RT, na.rm=TRUE)[3]) -->

<!-- RT_state1_condition_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 16, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- RT_state1_plotting_df <- trial_df %>% -->

<!--   filter(phase == "learning", -->

<!--          state %in% c(1)) -->

<!-- ggplot(RT_state1_plotting_df, aes(x=condition, y=RT, fill = condition)) + -->

<!--   geom_boxplot() + -->

<!--   scale_y_continuous(labels = scales::comma) + -->

<!--   facet_grid(vars(group), vars(version)) + -->

<!--   theme_light(base_size = 16) + -->

<!--   xlab("Phase") + -->

<!--   ylab("Reaction times") + -->

<!--   theme(legend.position = "none", -->

<!--         axis.title.x=element_blank(), -->

<!--         axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) + -->

<!--   scale_fill_viridis("Condition", option = "viridis", discrete = TRUE) -->

<!-- ``` -->

<!-- ### Linear regression -->

<!-- ```{r} -->

<!-- linreg_learning_state1_rt_df <- trial_df %>% -->

<!--   filter(phase == "learning", -->

<!--          state == 1 -->

<!--          ) %>% -->

<!--   mutate(condition = as.factor(condition), -->

<!--          group = as.factor(group), -->

<!--          version = as.factor(version), -->

<!--          environment = as.factor(environment)) %>% -->

<!--   select(ID, -->

<!--          RT, -->

<!--          condition, -->

<!--          group, -->

<!--          version, -->

<!--          environment) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # rt_learning_state1_model <- lmer(data = linreg_learning_state1_rt_df, -->

<!-- #                                  RT ~ group*version*condition + (1 | ID), -->

<!-- #                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!-- #                                  REML = FALSE) -->

<!-- # saveRDS(rt_learning_state1_model, file=file.path(model_path, "rt_learning_state1_model.rds")) -->

<!-- rt_learning_state1_model <- readRDS(file.path(model_path, "rt_learning_state1_model.rds")) -->

<!-- # rt_learning_state1_model_rs <- lmer(data = linreg_learning_state1_rt_df, -->

<!-- #                                  RT ~ group*version*condition + (1 + condition | ID), -->

<!-- #                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!-- #                                  REML = FALSE) -->

<!-- # saveRDS(rt_learning_state1_model_rs, file=file.path(model_path, "rt_learning_state1_model_rs.rds")) -->

<!-- rt_learning_state1_model_rs <- readRDS(file.path(model_path, "rt_learning_state1_model_rs.rds")) -->

<!-- anova(rt_learning_state1_model, rt_learning_state1_model_rs) -->

<!-- tab_model(rt_learning_state1_model_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- ## RT in all states per condition -->

<!-- ### Plot -->

<!-- ```{r} -->

<!-- RT_state1_condition_df <- trial_df %>% -->

<!--   filter(phase == "learning", -->

<!--          state %in% c(1,2,3)) %>% -->

<!--   group_by(group, version, condition) %>% -->

<!--   summarise(mean_RT = mean(RT), -->

<!--             se_RT = sd(RT, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(RT, na.rm=TRUE)[2], -->

<!--             ci_u = ci(RT, na.rm=TRUE)[3]) -->

<!-- RT_state1_condition_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 16, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- RT_state1_plotting_df <- trial_df %>% -->

<!--   filter(phase == "learning", -->

<!--          state %in% c(1,2,3)) -->

<!-- ggplot(RT_state1_plotting_df, aes(x=condition, y=RT, fill = condition)) + -->

<!--   geom_boxplot() + -->

<!--   scale_y_continuous(labels = scales::comma) + -->

<!--   facet_grid(vars(group), vars(version)) + -->

<!--   theme_light(base_size = 16) + -->

<!--   ylab("Reaction times") + -->

<!--   theme(legend.position = "none", -->

<!--         axis.title.x=element_blank(), -->

<!--         axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) + -->

<!--   scale_fill_viridis("Condition", option = "viridis", discrete = TRUE) -->

<!-- ``` -->

<!-- ### Linear regression -->

<!-- ```{r} -->

<!-- linreg_learning_state123_rt_df <- trial_df %>% -->

<!--   filter(phase == "learning", -->

<!--          state %in% c(1,2,3) -->

<!--          ) %>% -->

<!--   mutate(condition = as.factor(condition), -->

<!--          group = as.factor(group), -->

<!--          version = as.factor(version), -->

<!--          environment = as.factor(environment)) %>% -->

<!--   select(ID, -->

<!--          RT, -->

<!--          condition, -->

<!--          group, -->

<!--          version, -->

<!--          environment) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # rt_learning_state123_model <- lmer(data = linreg_learning_state123_rt_df, -->

<!-- #                                  RT ~ group*version*condition + (1 | ID), -->

<!-- #                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!-- #                                  REML = FALSE) -->

<!-- # saveRDS(rt_learning_state123_model, file=file.path(model_path, "rt_learning_state123_model.rds")) -->

<!-- rt_learning_state123_model <- readRDS(file.path(model_path, "rt_learning_state123_model.rds")) -->

<!-- # rt_learning_state123_model_rs <- lmer(data = linreg_learning_state123_rt_df, -->

<!-- #                                  RT ~ group*version*condition + (1 + condition | ID), -->

<!-- #                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!-- #                                  REML = FALSE) -->

<!-- # saveRDS(rt_learning_state123_model_rs, file=file.path(model_path, "rt_learning_state123_model_rs.rds")) -->

<!-- rt_learning_state123_model_rs <- readRDS(file.path(model_path, "rt_learning_state123_model_rs.rds")) -->

<!-- anova(rt_learning_state123_model, rt_learning_state123_model_rs) -->

<!-- tab_model(rt_learning_state123_model_rs, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- ## RT in state 1 - correct choice -->

<!-- ### Plot -->

<!-- ```{r} -->

<!-- RT_state1_condition_phase_correct_df <- trial_df %>% -->

<!--   filter(phase == "learning", -->

<!--          state %in% c(1)) %>% -->

<!--   group_by(group, version, condition, phase, correct) %>% -->

<!--   summarise(mean_RT = mean(RT), -->

<!--             se_RT = sd(RT, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(RT, na.rm=TRUE)[2], -->

<!--             ci_u = ci(RT, na.rm=TRUE)[3], -->

<!--             n = n()) -->

<!-- RT_state1_condition_phase_correct_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 16, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- RT_state1_correct_df <- trial_df %>% -->

<!--   mutate(correct = as.factor(correct)) %>% -->

<!--   filter(phase == "learning", -->

<!--          state %in% c(1)) -->

<!-- ggplot(RT_state1_correct_df, aes(x=condition, y=RT, fill = correct)) + -->

<!--   geom_boxplot() + -->

<!--   scale_y_continuous(labels = scales::comma) + -->

<!--   facet_grid(vars(group), vars(version)) + -->

<!--   theme_light(base_size = 16) + -->

<!--   ylab("Reaction times") + -->

<!--   theme(axis.title.x=element_blank(), -->

<!--         axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) + -->

<!--   scale_fill_viridis("Correct", option = "magma", discrete = TRUE) -->

<!-- ``` -->

<!-- ### Linear regression -->

<!-- ```{r} -->

<!-- linreg_learning_state1_rt_correct_df <- trial_df %>% -->

<!--   filter(phase == "learning", -->

<!--          state == 1 -->

<!--          ) %>% -->

<!--   mutate(condition = as.factor(condition), -->

<!--          group = as.factor(group), -->

<!--          version = as.factor(version), -->

<!--          environment = as.factor(environment), -->

<!--          correct = as.factor(correct)) %>% -->

<!--   select(ID, -->

<!--          RT, -->

<!--          condition, -->

<!--          group, -->

<!--          version, -->

<!--          environment, -->

<!--          correct) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # rt_correct_learning_state1_model <- lmer(data = linreg_learning_state1_rt_correct_df, -->

<!-- #                                  RT ~ group*version*condition*correct + (1 | ID), -->

<!-- #                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!-- #                                  REML = FALSE) -->

<!-- # saveRDS(rt_correct_learning_state1_model, file=file.path(model_path, "rt_correct_learning_state1_model.rds")) -->

<!-- rt_correct_learning_state1_model <- readRDS(file.path(model_path, "rt_correct_learning_state1_model.rds")) -->

<!-- # rt_correct_learning_state1_model_rs <- lmer(data = linreg_learning_state1_rt_correct_df, -->

<!-- #                                  RT ~ group*version*condition*correct + (1 + condition | ID), -->

<!-- #                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!-- #                                  REML = FALSE) -->

<!-- # saveRDS(rt_correct_learning_state1_model_rs, file=file.path(model_path, "rt_correct_learning_state1_model_rs.rds")) -->

<!-- rt_correct_learning_state1_model_rs <- readRDS(file.path(model_path, "rt_correct_learning_state1_model_rs.rds")) -->

<!-- # rt_correct_learning_state1_model_rs2 <- lmer(data = linreg_learning_state1_rt_correct_df, -->

<!-- #                                  RT ~ group*version*condition*correct + (1 + condition + correct | ID), -->

<!-- #                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!-- #                                  REML = FALSE) -->

<!-- # saveRDS(rt_correct_learning_state1_model_rs2, file=file.path(model_path, "rt_correct_learning_state1_model_rs2.rds")) -->

<!-- rt_correct_learning_state1_model_rs2 <- readRDS(file.path(model_path, "rt_correct_learning_state1_model_rs2.rds")) -->

<!-- anova(rt_correct_learning_state1_model, rt_correct_learning_state1_model_rs, rt_correct_learning_state1_model_rs2) -->

<!-- tab_model(rt_correct_learning_state1_model_rs2, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- ## RT in all states - correct choice -->

<!-- ### Plot -->

<!-- ```{r} -->

<!-- RT_state1_condition_phase_correct_df <- trial_df %>% -->

<!--   filter(phase == "learning", -->

<!--          state %in% c(1,2,3)) %>% -->

<!--   group_by(group, version, condition, phase, correct) %>% -->

<!--   summarise(mean_RT = mean(RT), -->

<!--             se_RT = sd(RT, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(RT, na.rm=TRUE)[2], -->

<!--             ci_u = ci(RT, na.rm=TRUE)[3], -->

<!--             n = n()) -->

<!-- RT_state1_condition_phase_correct_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 16, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- RT_state1_correct_df <- trial_df %>% -->

<!--   mutate(correct = as.factor(correct)) %>% -->

<!--   filter(phase == "learning", -->

<!--          state %in% c(1,2,3)) -->

<!-- ggplot(RT_state1_correct_df, aes(x=condition, y=RT, fill = correct)) + -->

<!--   geom_boxplot() + -->

<!--   scale_y_continuous(labels = scales::comma) + -->

<!--   facet_grid(vars(group), vars(version)) + -->

<!--   theme_light(base_size = 16) + -->

<!--   ylab("Reaction times") + -->

<!--   theme(axis.title.x=element_blank(), -->

<!--         axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) + -->

<!--   scale_fill_viridis("Correct", option = "magma", discrete = TRUE) -->

<!-- ``` -->

<!-- ### Linear regression -->

<!-- ```{r} -->

<!-- linreg_learning_state123_rt_correct_df <- trial_df %>% -->

<!--   filter(phase == "learning", -->

<!--          state%in% c(1,2,3) -->

<!--          ) %>% -->

<!--   mutate(condition = as.factor(condition), -->

<!--          group = as.factor(group), -->

<!--          version = as.factor(version), -->

<!--          environment = as.factor(environment), -->

<!--          correct = as.factor(correct)) %>% -->

<!--   select(ID, -->

<!--          RT, -->

<!--          condition, -->

<!--          group, -->

<!--          version, -->

<!--          environment, -->

<!--          correct) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # rt_correct_learning_state123_model <- lmer(data = linreg_learning_state123_rt_correct_df, -->

<!-- #                                  RT ~ group*version*condition*correct + (1 | ID), -->

<!-- #                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!-- #                                  REML = FALSE) -->

<!-- # saveRDS(rt_correct_learning_state123_model, file=file.path(model_path, "rt_correct_learning_state123_model.rds")) -->

<!-- rt_correct_learning_state123_model <- readRDS(file.path(model_path, "rt_correct_learning_state123_model.rds")) -->

<!-- # rt_correct_learning_state123_model_rs <- lmer(data = linreg_learning_state123_rt_correct_df, -->

<!-- #                                  RT ~ group*version*condition*correct + (1 + condition | ID), -->

<!-- #                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!-- #                                  REML = FALSE) -->

<!-- # saveRDS(rt_correct_learning_state123_model_rs, file=file.path(model_path, "rt_correct_learning_state123_model_rs.rds")) -->

<!-- rt_correct_learning_state123_model_rs <- readRDS(file.path(model_path, "rt_correct_learning_state123_model_rs.rds")) -->

<!-- # rt_correct_learning_state123_model_rs2 <- lmer(data = linreg_learning_state123_rt_correct_df, -->

<!-- #                                  RT ~ group*version*condition*correct + (1 + condition + correct | ID), -->

<!-- #                                  control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e6)), -->

<!-- #                                  REML = FALSE) -->

<!-- # saveRDS(rt_correct_learning_state123_model_rs2, file=file.path(model_path, "rt_correct_learning_state123_model_rs2.rds")) -->

<!-- rt_correct_learning_state123_model_rs2 <- readRDS(file.path(model_path, "rt_correct_learning_state123_model_rs2.rds")) -->

<!-- anova(rt_correct_learning_state123_model, rt_correct_learning_state123_model_rs, rt_correct_learning_state123_model_rs2) -->

<!-- tab_model(rt_correct_learning_state123_model_rs2, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

# Time effects

## Performance per group, version, condition, trial

```{r}

# get percent correct over time

learning_correct_paths_group_version_condition_time_df <- trial_df %>%
  filter(phase == "learning",
         state %in% c(1)
         ) %>%
  group_by(ID, condition) %>%
  mutate(accumulated_state1_visits = row_number()
         ) %>%
  group_by(group, version, condition, accumulated_state1_visits) %>%
  summarise(mean_correct = mean(correct_path, na.rm = TRUE),
            se_correct = sd(correct_path, na.rm = TRUE)/sqrt(n()),
            ci_l = ci(correct_state_1, na.rm=TRUE)[2],
            ci_u = ci(correct_state_1, na.rm=TRUE)[3],
            n = n()
            )

learning_correct_paths_group_version_condition_time_df %>%
  kable("html") %>%
  kable_styling(font_size = 14,
                latex_options = "scale_down")

```

```{r}
# bar plot
supp.labs <- c("Low-risk drinkers", "High-risk drinkers", "Non-alcohol context", "Alcohol context")
names(supp.labs) <- c("Low-risk drinkers", "Harmful drinkers", "Monetary version", "Alcohol version")


ggplot(learning_correct_paths_group_version_condition_time_df, aes(x=accumulated_state1_visits+4, y=mean_correct)) +
  geom_line(aes(color=condition), size=1) +
  geom_ribbon(aes(ymin = mean_correct-se_correct, ymax = mean_correct+se_correct, fill = condition), alpha = 0.2) +
  scale_y_continuous(limits = c(0, 1)) +
  facet_grid(vars(group), vars(version), labeller = as_labeller(supp.labs)) +
  theme_light(base_size = 16, base_family = "Aptos") +
  xlab("Learning trial number") +
  ylab("Proportion of trials with optimal path preference") +
  theme(legend.position = "right",
        axis.text.x = element_text(size=16),
        axis.text.y = element_text(size=16),
        strip.text.x = element_text(size = 16),
        strip.text.y = element_text(size = 16),
        legend.text=element_text(size=16)) +
  guides(fill=guide_legend(title="Condition"),
         color=guide_legend(title="Condition")) +
  scale_color_viridis(option = "viridis", discrete = TRUE) +
  scale_fill_viridis(option = "viridis", discrete = TRUE)

ggsave(filename = "suppl_learning_time.png", path = figure_path, width = 11, height = 6, device='png', dpi=600)
```
