---
title: "Explore rating phase data"
doi: "https://doi.org/10.17605/OSF.IO/9TUZE"
author: "Milena Musial"
date: 08/03/2025
format: html
editor: visual
toc: TRUE
code-fold: TRUE
warning: FALSE
number-sections: TRUE
embed-resources: true
execute: 
  warning: FALSE
editor_options: 
  chunk_output_type: console
---

# Set up

```{r}
rm(list = ls(all = TRUE))

# Load packages
packages <- c("ggplot2", "dplyr", "tidyr", "kableExtra", "gmodels", "lme4", "sjPlot", "viridis", "forcats", "performance", "emmeans")
#install.packages(packages)
invisible(lapply(packages, require, character.only = TRUE))

# set color scheme

# define paths
data_path <- "/Users/milenamusial/Library/CloudStorage/OneDrive-Charité-UniversitätsmedizinBerlin/PhD/04_B01/WP3/WP3_DATA/FINAL_STUDY/RDFs"
figure_path <- "/Users/milenamusial/Library/CloudStorage/OneDrive-Charité-UniversitätsmedizinBerlin/PhD/04_B01/WP3/Project_Docs/Figures"


# read dfs
load(file.path(data_path, "final_data_included.RData"))
load(file.path(data_path, "demo_psych_data_included.RData"))

```

<!-- ## % Correct paths starting from state 1 in first test trial only -->

<!-- ```{r} -->

<!-- test_correct_paths_trial1_group_version_condition_df <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          trial == 1, -->

<!--          state %in% c(1) -->

<!--          ) %>% -->

<!--   group_by(group, version, condition) %>% -->

<!--   summarise(mean_correct = mean(correct_path, na.rm = TRUE), -->

<!--             se_correct = sd(correct_path, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(correct_path, na.rm=TRUE)[2], -->

<!--             ci_u = ci(correct_path, na.rm=TRUE)[3], -->

<!--             n = n() -->

<!--             ) -->

<!-- test_correct_paths_trial1_group_version_condition_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 18, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # bar plot -->

<!-- ggplot(test_correct_paths_trial1_group_version_condition_df, aes(x=condition, y=mean_correct*100)) + -->

<!--   geom_bar(stat="identity", aes(fill = condition)) + -->

<!--   geom_errorbar(aes(ymin=ci_l*100, ymax=ci_u*100),  -->

<!--                 width=.2, -->

<!--                 position=position_dodge(.9)) + -->

<!--   facet_grid(vars(group), vars(version)) + -->

<!--   scale_y_continuous("% Correct paths in trial 1", limits = c(0, 105)) + -->

<!--   theme_light(base_size = 16) + -->

<!--   theme(legend.position = "none", -->

<!--         axis.title.x=element_blank(), -->

<!--         axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) + -->

<!--   scale_fill_viridis(option = "viridis", discrete = TRUE) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # Prepare LogReg dfs -->

<!-- logreg_test_path_trial1_group_version_condition_df_full <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state == 1, -->

<!--          trial == 1) %>% -->

<!--   mutate(correct_path = as.factor(correct_path), -->

<!--          condition = as.factor(condition), -->

<!--          version = as.factor(version), -->

<!--          group = as.factor(group)) %>% -->

<!--   select(group, -->

<!--          version, -->

<!--          ID, -->

<!--          correct_path, -->

<!--          condition) -->

<!-- logreg_test_path_trial1_condition_df_lowrisk_control <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state == 1, -->

<!--          trial == 1, -->

<!--          group == "Low-risk drinkers", -->

<!--          version == "Monetary version") %>% -->

<!--   mutate(correct_path = as.factor(correct_path), -->

<!--          condition = as.factor(condition)) %>% -->

<!--   select(ID, -->

<!--          correct_path, -->

<!--          condition) -->

<!-- logreg_test_path_trial1_group_condition_df_alcohol <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state == 1, -->

<!--          trial == 1, -->

<!--          version == "Alcohol version") %>% -->

<!--   mutate(correct_path = as.factor(correct_path), -->

<!--          condition = as.factor(condition), -->

<!--          group = as.factor(group)) %>% -->

<!--   select(group, -->

<!--          ID, -->

<!--          correct_path, -->

<!--          condition) -->

<!-- ``` -->

<!-- #### Model 1_expl4a: Low-risk drinkers, control version, compare against transition revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_path_trial1_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 3) -->

<!-- model1_expl4a <- glmer(correct_path ~ condition + (1 + condition | ID), data = logreg_test_path_trial1_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model1_expl4a, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 2_expl4a: Low-risk drinkers, control version, compare against policy revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_path_trial1_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 4) -->

<!-- model2_expl4a <- glmer(correct_path ~ condition + (1 + condition | ID), data = logreg_test_path_trial1_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model2_expl4a, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 3_expl4a: Full dataset, compare against transition revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_path_trial1_group_version_condition_df_full$condition) <- contr.treatment(5, base = 3) -->

<!-- # create model matrices -->

<!-- mm_version <- model.matrix(correct_path ~ 1 + version, data=logreg_test_path_trial1_group_version_condition_df_full) -->

<!-- version_alc <- mm_version[,2] # version alc compared to version monetary -->

<!-- mm_group <- model.matrix(correct_path ~ 1 + group, data=logreg_test_path_trial1_group_version_condition_df_full) -->

<!-- group_harmful <- mm_group[,2] # group harmful compared to low-risk -->

<!-- mm_condition <- model.matrix(correct_path ~ 1 + condition, data=logreg_test_path_trial1_group_version_condition_df_full) -->

<!-- condition_control <- mm_condition[,5] # condition control compared to transition -->

<!-- condition_goalstate <- mm_condition[,3] # condition goalstate compared to transition -->

<!-- condition_policy <- mm_condition[,4] # condition policy compared to transition -->

<!-- condition_reward <- mm_condition[,2] # condition reward compared to transition -->

<!-- model3_expl4a <- glmer(correct_path ~ -->

<!--                   condition_control + condition_goalstate + condition_policy + condition_reward + group_harmful + -->

<!--                   condition_control:group_harmful + condition_goalstate:group_harmful + -->

<!--                   condition_policy:group_harmful + condition_reward:group_harmful + -->

<!--                   condition_control:group_harmful:version_alc + condition_goalstate:group_harmful:version_alc + -->

<!--                   condition_policy:group_harmful:version_alc + condition_reward:group_harmful:version_alc + -->

<!--                   (1 + condition_control + condition_goalstate + condition_policy + condition_reward | ID), -->

<!--                 data = logreg_test_path_trial1_group_version_condition_df_full, -->

<!--                 family = "binomial", -->

<!--                 glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model3_expl4a, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 4_expl4a: Alcohol context, compare against reward revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_path_trial1_group_condition_df_alcohol$condition) <- contr.treatment(5, base = 1) -->

<!-- model4_expl4a <- glmer(correct_path ~ condition*group + (1 + condition | ID), data = logreg_test_path_trial1_group_condition_df_alcohol, family = "binomial", glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model4_expl4a, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 5_expl4a: Full dataset, compare against reward revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_path_trial1_group_version_condition_df_full$condition) <- contr.treatment(5, base = 1) -->

<!-- # create model matrices -->

<!-- mm_version <- model.matrix(correct_path ~ 1 + version, data=logreg_test_path_trial1_group_version_condition_df_full) -->

<!-- version_alc <- mm_version[,2] # version alc compared to version monetary -->

<!-- mm_group <- model.matrix(correct_path ~ 1 + group, data=logreg_test_path_trial1_group_version_condition_df_full) -->

<!-- group_harmful <- mm_group[,2] # group harmful compared to low-risk -->

<!-- mm_condition <- model.matrix(correct_path ~ 1 + condition, data=logreg_test_path_trial1_group_version_condition_df_full) -->

<!-- condition_control <- mm_condition[,5] # condition control compared to reward -->

<!-- condition_goalstate <- mm_condition[,2] # condition goalstate compared to reward -->

<!-- condition_policy <- mm_condition[,4] # condition policy compared to reward -->

<!-- condition_transition <- mm_condition[,3] # condition transition compared to reward -->

<!-- model5_expl4a <- glmer(correct_path ~ -->

<!--                   condition_control + condition_goalstate + condition_policy + condition_transition + group_harmful + -->

<!--                   condition_control:group_harmful + condition_goalstate:group_harmful + -->

<!--                   condition_policy:group_harmful + condition_transition:group_harmful + -->

<!--                   condition_control:group_harmful:version_alc + condition_goalstate:group_harmful:version_alc + -->

<!--                   condition_policy:group_harmful:version_alc + condition_transition:group_harmful:version_alc + -->

<!--                   (1 + condition_control + condition_goalstate + condition_policy + condition_transition | ID), -->

<!--                 data = logreg_test_path_trial1_group_version_condition_df_full, -->

<!--                 family = "binomial", -->

<!--                 glmerControl(optCtrl=list(maxfun=1e5), -->

<!--                              optimizer = "bobyqa")) -->

<!-- tab_model(model5_expl4a, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- ## % Correct state 1 in all 5 test trials -->

<!-- ```{r} -->

<!-- test_correct_group_version_condition_df <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state %in% c(1) -->

<!--          ) %>% -->

<!--   group_by(group, version, condition) %>% -->

<!--   summarise(mean_correct = mean(correct, na.rm = TRUE), -->

<!--             se_correct = sd(correct, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(correct, na.rm=TRUE)[2], -->

<!--             ci_u = ci(correct, na.rm=TRUE)[3], -->

<!--             n = n() -->

<!--             ) -->

<!-- test_correct_group_version_condition_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 18, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # bar plot -->

<!-- ggplot(test_correct_group_version_condition_df, aes(x=condition, y=mean_correct*100)) + -->

<!--   geom_bar(stat="identity", aes(fill = condition)) + -->

<!--   geom_errorbar(aes(ymin=ci_l*100, ymax=ci_u*100),  -->

<!--                 width=.2, -->

<!--                 position=position_dodge(.9)) + -->

<!--   facet_grid(vars(group), vars(version)) + -->

<!--   scale_y_continuous("% Correct state 1", limits = c(0, 105)) + -->

<!--   theme_light(base_size = 16) + -->

<!--   theme(legend.position = "none", -->

<!--         axis.title.x=element_blank(), -->

<!--         axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) + -->

<!--   scale_fill_viridis(option = "viridis", discrete = TRUE) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # Prepare LogReg dfs -->

<!-- logreg_test_correct_group_version_condition_df_full <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state == 1) %>% -->

<!--   mutate(correct = as.factor(correct), -->

<!--          condition = as.factor(condition), -->

<!--          version = as.factor(version), -->

<!--          group = as.factor(group)) %>% -->

<!--   select(group, -->

<!--          version, -->

<!--          ID, -->

<!--          correct, -->

<!--          condition) -->

<!-- logreg_test_correct_condition_df_lowrisk_control <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state == 1, -->

<!--          group == "Low-risk drinkers", -->

<!--          version == "Monetary version") %>% -->

<!--   mutate(correct = as.factor(correct), -->

<!--          condition = as.factor(condition)) %>% -->

<!--   select(ID, -->

<!--          correct, -->

<!--          condition) -->

<!-- logreg_test_correct_group_condition_df_alcohol <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state == 1, -->

<!--          version == "Alcohol version") %>% -->

<!--   mutate(correct = as.factor(correct), -->

<!--          condition = as.factor(condition), -->

<!--          group = as.factor(group)) %>% -->

<!--   select(group, -->

<!--          ID, -->

<!--          correct, -->

<!--          condition) -->

<!-- ``` -->

<!-- #### Model 1_expl4b: Low-risk drinkers, control version, compare against transition revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_correct_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 3) -->

<!-- model1_expl4b <- glmer(correct ~ condition + (1 + condition | ID), data = logreg_test_correct_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model1_expl4b, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 2_expl4b: Low-risk drinkers, control version, compare against policy revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_correct_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 4) -->

<!-- model2_expl4b <- glmer(correct ~ condition + (1 + condition | ID), data = logreg_test_correct_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model2_expl4b, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 3_expl4b: Full dataset, compare against transition revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_correct_group_version_condition_df_full$condition) <- contr.treatment(5, base = 3) -->

<!-- # create model matrices -->

<!-- mm_version <- model.matrix(correct ~ 1 + version, data=logreg_test_correct_group_version_condition_df_full) -->

<!-- version_alc <- mm_version[,2] # version alc compared to version monetary -->

<!-- mm_group <- model.matrix(correct ~ 1 + group, data=logreg_test_correct_group_version_condition_df_full) -->

<!-- group_harmful <- mm_group[,2] # group harmful compared to low-risk -->

<!-- mm_condition <- model.matrix(correct ~ 1 + condition, data=logreg_test_correct_group_version_condition_df_full) -->

<!-- condition_control <- mm_condition[,5] # condition control compared to transition -->

<!-- condition_goalstate <- mm_condition[,3] # condition goalstate compared to transition -->

<!-- condition_policy <- mm_condition[,4] # condition policy compared to transition -->

<!-- condition_reward <- mm_condition[,2] # condition reward compared to transition -->

<!-- model3_expl4b <- glmer(correct ~ -->

<!--                   condition_control + condition_goalstate + condition_policy + condition_reward + group_harmful + -->

<!--                   condition_control:group_harmful + condition_goalstate:group_harmful + -->

<!--                   condition_policy:group_harmful + condition_reward:group_harmful + -->

<!--                   condition_control:group_harmful:version_alc + condition_goalstate:group_harmful:version_alc + -->

<!--                   condition_policy:group_harmful:version_alc + condition_reward:group_harmful:version_alc + -->

<!--                   (1 + condition_control + condition_goalstate + condition_policy + condition_reward | ID), -->

<!--                 data = logreg_test_correct_group_version_condition_df_full, -->

<!--                 family = "binomial", -->

<!--                 glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model3_expl4b, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 4_expl4b: Alcohol context, compare against reward revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_correct_group_condition_df_alcohol$condition) <- contr.treatment(5, base = 1) -->

<!-- model4_expl4b <- glmer(correct ~ condition*group + (1 + condition | ID), data = logreg_test_correct_group_condition_df_alcohol, family = "binomial", glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model4_expl4b, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 5_expl4b: Full dataset, compare against reward revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_correct_group_version_condition_df_full$condition) <- contr.treatment(5, base = 1) -->

<!-- # create model matrices -->

<!-- mm_version <- model.matrix(correct ~ 1 + version, data=logreg_test_correct_group_version_condition_df_full) -->

<!-- version_alc <- mm_version[,2] # version alc compared to version monetary -->

<!-- mm_group <- model.matrix(correct ~ 1 + group, data=logreg_test_correct_group_version_condition_df_full) -->

<!-- group_harmful <- mm_group[,2] # group harmful compared to low-risk -->

<!-- mm_condition <- model.matrix(correct ~ 1 + condition, data=logreg_test_correct_group_version_condition_df_full) -->

<!-- condition_control <- mm_condition[,5] # condition control compared to reward -->

<!-- condition_goalstate <- mm_condition[,2] # condition goalstate compared to reward -->

<!-- condition_policy <- mm_condition[,4] # condition policy compared to reward -->

<!-- condition_transition <- mm_condition[,3] # condition transition compared to reward -->

<!-- model5_expl4b <- glmer(correct ~ -->

<!--                   condition_control + condition_goalstate + condition_policy + condition_transition + group_harmful + -->

<!--                   condition_control:group_harmful + condition_goalstate:group_harmful + -->

<!--                   condition_policy:group_harmful + condition_transition:group_harmful + -->

<!--                   condition_control:group_harmful:version_alc + condition_goalstate:group_harmful:version_alc + -->

<!--                   condition_policy:group_harmful:version_alc + condition_transition:group_harmful:version_alc + -->

<!--                   (1 + condition_control + condition_goalstate + condition_policy + condition_transition | ID), -->

<!--                 data = logreg_test_correct_group_version_condition_df_full, -->

<!--                 family = "binomial", -->

<!--                 glmerControl(optCtrl=list(maxfun=1e5), -->

<!--                              optimizer = "bobyqa")) -->

<!-- tab_model(model5_expl4b, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- ## % Correct state 1 in first test trial -->

<!-- ```{r} -->

<!-- test_correct_trial1_group_version_condition_df <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          trial == 1, -->

<!--          state %in% c(1) -->

<!--          ) %>% -->

<!--   group_by(group, version, condition) %>% -->

<!--   summarise(mean_correct = mean(correct, na.rm = TRUE), -->

<!--             se_correct = sd(correct, na.rm = TRUE)/sqrt(n()), -->

<!--             ci_l = ci(correct, na.rm=TRUE)[2], -->

<!--             ci_u = ci(correct, na.rm=TRUE)[3], -->

<!--             n = n() -->

<!--             ) -->

<!-- test_correct_trial1_group_version_condition_df %>% -->

<!--   kable("html") %>% -->

<!--   kable_styling(font_size = 18, -->

<!--                 latex_options = "scale_down") -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # bar plot -->

<!-- ggplot(test_correct_trial1_group_version_condition_df, aes(x=condition, y=mean_correct*100)) + -->

<!--   geom_bar(stat="identity", aes(fill = condition)) + -->

<!--   geom_errorbar(aes(ymin=ci_l*100, ymax=ci_u*100),  -->

<!--                 width=.2, -->

<!--                 position=position_dodge(.9)) + -->

<!--   facet_grid(vars(group), vars(version)) + -->

<!--   scale_y_continuous("% Correct state 1 in trial 1", limits = c(0, 105)) + -->

<!--   theme_light(base_size = 16) + -->

<!--   theme(legend.position = "none", -->

<!--         axis.title.x=element_blank(), -->

<!--         axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) + -->

<!--   scale_fill_viridis(option = "viridis", discrete = TRUE) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # Prepare LogReg dfs -->

<!-- logreg_test_correct_trial1_group_version_condition_df_full <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          trial == 1, -->

<!--          state == 1) %>% -->

<!--   mutate(correct = as.factor(correct), -->

<!--          condition = as.factor(condition), -->

<!--          version = as.factor(version), -->

<!--          group = as.factor(group)) %>% -->

<!--   select(group, -->

<!--          version, -->

<!--          ID, -->

<!--          correct, -->

<!--          condition) -->

<!-- logreg_test_correct_trial1_condition_df_lowrisk_control <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state == 1, -->

<!--          trial == 1, -->

<!--          group == "Low-risk drinkers", -->

<!--          version == "Monetary version") %>% -->

<!--   mutate(correct = as.factor(correct), -->

<!--          condition = as.factor(condition)) %>% -->

<!--   select(ID, -->

<!--          correct, -->

<!--          condition) -->

<!-- logreg_test_correct_trial1_group_condition_df_alcohol <- trial_df %>% -->

<!--   filter(phase == "test", -->

<!--          state == 1, -->

<!--          trial == 1, -->

<!--          version == "Alcohol version") %>% -->

<!--   mutate(correct = as.factor(correct), -->

<!--          condition = as.factor(condition), -->

<!--          group = as.factor(group)) %>% -->

<!--   select(group, -->

<!--          ID, -->

<!--          correct, -->

<!--          condition) -->

<!-- ``` -->

<!-- #### Model 1_expl4c: Low-risk drinkers, control version, compare against transition revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_correct_trial1_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 3) -->

<!-- model1_expl4c <- glmer(correct ~ condition + (1 + condition | ID), data = logreg_test_correct_trial1_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model1_expl4c, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 2_expl4b: Low-risk drinkers, control version, compare against policy revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_correct_trial1_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 4) -->

<!-- model2_expl4c <- glmer(correct ~ condition + (1 + condition | ID), data = logreg_test_correct_trial1_condition_df_lowrisk_control, family = "binomial", glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model2_expl4c, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 3_expl4b: Full dataset, compare against transition revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_correct_trial1_group_version_condition_df_full$condition) <- contr.treatment(5, base = 3) -->

<!-- # create model matrices -->

<!-- mm_version <- model.matrix(correct ~ 1 + version, data=logreg_test_correct_trial1_group_version_condition_df_full) -->

<!-- version_alc <- mm_version[,2] # version alc compared to version monetary -->

<!-- mm_group <- model.matrix(correct ~ 1 + group, data=logreg_test_correct_trial1_group_version_condition_df_full) -->

<!-- group_harmful <- mm_group[,2] # group harmful compared to low-risk -->

<!-- mm_condition <- model.matrix(correct ~ 1 + condition, data=logreg_test_correct_trial1_group_version_condition_df_full) -->

<!-- condition_control <- mm_condition[,5] # condition control compared to transition -->

<!-- condition_goalstate <- mm_condition[,3] # condition goalstate compared to transition -->

<!-- condition_policy <- mm_condition[,4] # condition policy compared to transition -->

<!-- condition_reward <- mm_condition[,2] # condition reward compared to transition -->

<!-- model3_expl4c <- glmer(correct ~ -->

<!--                   condition_control + condition_goalstate + condition_policy + condition_reward + group_harmful + -->

<!--                   condition_control:group_harmful + condition_goalstate:group_harmful + -->

<!--                   condition_policy:group_harmful + condition_reward:group_harmful + -->

<!--                   condition_control:group_harmful:version_alc + condition_goalstate:group_harmful:version_alc + -->

<!--                   condition_policy:group_harmful:version_alc + condition_reward:group_harmful:version_alc + -->

<!--                   (1 + condition_control + condition_goalstate + condition_policy + condition_reward | ID), -->

<!--                 data = logreg_test_correct_trial1_group_version_condition_df_full, -->

<!--                 family = "binomial", -->

<!--                 glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model3_expl4c, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 4_expl4b: Alcohol context, compare against reward revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_correct_trial1_group_condition_df_alcohol$condition) <- contr.treatment(5, base = 1) -->

<!-- model4_expl4c <- glmer(correct ~ condition*group + (1 + condition | ID), data = logreg_test_correct_trial1_group_condition_df_alcohol, family = "binomial", glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model4_expl4c, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

<!-- #### Model 5_expl4b: Full dataset, compare against reward revaluation -->

<!-- ```{r} -->

<!-- contrasts(logreg_test_correct_trial1_group_version_condition_df_full$condition) <- contr.treatment(5, base = 1) -->

<!-- # create model matrices -->

<!-- mm_version <- model.matrix(correct ~ 1 + version, data=logreg_test_correct_trial1_group_version_condition_df_full) -->

<!-- version_alc <- mm_version[,2] # version alc compared to version monetary -->

<!-- mm_group <- model.matrix(correct ~ 1 + group, data=logreg_test_correct_trial1_group_version_condition_df_full) -->

<!-- group_harmful <- mm_group[,2] # group harmful compared to low-risk -->

<!-- mm_condition <- model.matrix(correct ~ 1 + condition, data=logreg_test_correct_trial1_group_version_condition_df_full) -->

<!-- condition_control <- mm_condition[,5] # condition control compared to reward -->

<!-- condition_goalstate <- mm_condition[,2] # condition goalstate compared to reward -->

<!-- condition_policy <- mm_condition[,4] # condition policy compared to reward -->

<!-- condition_transition <- mm_condition[,3] # condition transition compared to reward -->

<!-- model5_expl4c <- glmer(correct ~ -->

<!--                   condition_control + condition_goalstate + condition_policy + condition_transition + group_harmful + -->

<!--                   condition_control:group_harmful + condition_goalstate:group_harmful + -->

<!--                   condition_policy:group_harmful + condition_transition:group_harmful + -->

<!--                   condition_control:group_harmful:version_alc + condition_goalstate:group_harmful:version_alc + -->

<!--                   condition_policy:group_harmful:version_alc + condition_transition:group_harmful:version_alc + -->

<!--                   (1 + condition_control + condition_goalstate + condition_policy + condition_transition | ID), -->

<!--                 data = logreg_test_correct_trial1_group_version_condition_df_full, -->

<!--                 family = "binomial", -->

<!--                 glmerControl(optimizer = "bobyqa")) -->

<!-- tab_model(model5_expl4c, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;')) -->

<!-- ``` -->

# Plot

```{r}
rating_state1_group_version_condition_df <- rating_df %>%
  group_by(group, version, condition) %>%
  summarise(n = n(),
            mean_rating_diff = mean(rating_diff_switch_state1, na.rm=T),
            se_rating_diff = sd(rating_diff_switch_state1, na.rm = TRUE)/sqrt(n()),
            ci_l = ci(rating_diff_switch_state1, na.rm=TRUE)[2],
            ci_u = ci(rating_diff_switch_state1, na.rm=TRUE)[3]
            )

rating_state1_group_version_condition_df %>%
  kable("html",
        digits=2) %>%
  kable_styling(font_size = 18,
                latex_options = "scale_down")
```

Higher scores = preference for action that was suboptimal during learning

Lower scores = preference for action that was optimal during learning

```{r}
# bar plot

# bar plot
supp.labs <- c("Low-risk drinkers", "High-risk drinkers", "Non-alcohol context", "Alcohol context")
names(supp.labs) <- c("Low-risk drinkers", "Harmful drinkers", "Monetary version", "Alcohol version")

ggplot(rating_state1_group_version_condition_df, aes(x=condition, y=mean_rating_diff)) +
  geom_bar(stat="identity", aes(fill = condition)) +
  geom_errorbar(aes(ymin=mean_rating_diff-se_rating_diff, ymax=mean_rating_diff+se_rating_diff), 
                width=.2,
                position=position_dodge(.9)) +
  facet_grid(vars(group), vars(version), labeller = as_labeller(supp.labs)) +
  scale_y_continuous("Difference in expected reward per first-state action \n (suboptimal - optimal during learning phase)", limits = c(-100, 100)) +
  theme_light(base_size = 16, base_family = "Aptos") +
  theme(legend.position = "none",
        axis.title.x=element_blank(),
        axis.text.x = element_text(angle = 50, vjust = 1, hjust=1, size=16),
        axis.text.y = element_text(size=16),
        strip.text.x = element_text(size = 16),
        strip.text.y = element_text(size = 16)) +
  scale_fill_viridis(option = "viridis", discrete = TRUE)

ggsave(filename = "suppl_rating.png", path = figure_path, width = 8, height = 7, device='png', dpi=600)
```

## LogReg

```{r}
# Prepare LogReg dfs
linreg_test_rating_group_version_condition_df_full <- rating_df %>%
  drop_na(rating_diff_switch_state1) %>%
  mutate(condition = as.factor(condition),
         version = as.factor(version),
         group = as.factor(group)) %>%
  dplyr::select(group,
         version,
         ID,
         rating_diff_switch_state1,
         condition)

# Set contrasts
contrasts(linreg_test_rating_group_version_condition_df_full$group) <- contr.sum(2)*-0.5
contrasts(linreg_test_rating_group_version_condition_df_full$version) <- contr.sum(2)*-0.5


linreg_test_rating_condition_df_lowrisk_control <- rating_df %>%
  drop_na(rating_diff_switch_state1) %>%
  filter(group == "Low-risk drinkers",
         version == "Monetary version") %>%
  mutate(condition = as.factor(condition)) %>%
  dplyr::select(ID,
         rating_diff_switch_state1,
         condition)

linreg_test_rating_group_condition_df_alcohol <- rating_df %>%
  drop_na(rating_diff_switch_state1) %>%
  filter(version == "Alcohol version") %>%
  mutate(condition = as.factor(condition),
         group = as.factor(group)) %>%
  dplyr::select(group,
         ID,
         rating_diff_switch_state1,
         condition)

# Set contrasts
contrasts(linreg_test_rating_group_condition_df_alcohol$group) <- contr.sum(2)*-0.5


```

#### Model 1_expl4d: Low-risk drinkers, control version, compare against transition revaluation

```{r}
contrasts(linreg_test_rating_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 3)

model1_expl4d <- lmer(rating_diff_switch_state1 ~ condition + (1 | ID), data = linreg_test_rating_condition_df_lowrisk_control, REML = F, lmerControl(optimizer = "bobyqa"))

tab_model(model1_expl4d, transform = NULL, show.est = T, show.stat = T, show.df = T, df.method = "satterthwaite", auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model1_expl4d, check=c("pp_check", "reqq", "qq"))

```

#### Model 2_expl4b: Low-risk drinkers, control version, compare against policy revaluation

```{r}
contrasts(linreg_test_rating_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 4)

model2_expl4d <- lmer(rating_diff_switch_state1 ~ condition + (1 | ID), data = linreg_test_rating_condition_df_lowrisk_control, REML = F, lmerControl(optimizer = "bobyqa"))

tab_model(model2_expl4d, transform = NULL, show.est = T, show.stat = T, show.df = T, df.method = "satterthwaite", auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model2_expl4d, check=c("pp_check", "reqq", "qq"))
```

#### Model 12b_expl4d: Low-risk drinkers, control version, compare against control

```{r}
contrasts(linreg_test_rating_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 5)

model12b_expl4d <- lmer(rating_diff_switch_state1 ~ condition + (1 | ID), data = linreg_test_rating_condition_df_lowrisk_control, REML = F, lmerControl(optimizer = "bobyqa"))

tab_model(model12b_expl4d, transform = NULL, show.est = T, show.stat = T, show.df = T, df.method = "satterthwaite", auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model12b_expl4d, check=c("pp_check", "reqq", "qq"))

```

#### Model 12c_expl4d: Low-risk drinkers, control version, compare against reward

```{r}
contrasts(linreg_test_rating_condition_df_lowrisk_control$condition) <- contr.treatment(5, base = 1)

model12c_expl4d <- lmer(rating_diff_switch_state1 ~ condition + (1 | ID), data = linreg_test_rating_condition_df_lowrisk_control, REML = F, lmerControl(optimizer = "bobyqa"))

tab_model(model12c_expl4d, transform = NULL, show.est = T, show.stat = T, show.df = T, df.method = "satterthwaite", auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model12c_expl4d, check=c("pp_check", "reqq", "qq"))

```

#### Model 3_expl4b: Full dataset, compare against transition revaluation

```{r}
contrasts(linreg_test_rating_group_version_condition_df_full$condition) <- contr.treatment(5, base = 3)

model3_expl4d <- lmer(rating_diff_switch_state1 ~
                  group*version*condition +
                  (1 | ID),
                data = linreg_test_rating_group_version_condition_df_full,
                REML = F, lmerControl(optimizer = "bobyqa"))

tab_model(model3_expl4d, transform = NULL, show.est = T, show.stat = T, show.df = T, df.method = "satterthwaite",  auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model3_expl4d, check=c("pp_check", "reqq", "qq"))
```

##### Inspect interactions

<!-- ```{r} -->
<!-- plot_model(model3_expl4d, type = "pred", terms = c("condition", "group", "version"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) -->
<!-- ``` -->

```{r}
# get marginal means
mmeans <- emmeans(model3_expl4d, specs = ~ condition|version, ref="Transition revaluation", type="response")
mmeans

# contrasts between marginal means per group and version
contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=3, adjust = "bonferroni")
contrasts
```

#### Model 4_expl4b: Alcohol context, compare against reward revaluation

```{r}
contrasts(linreg_test_rating_group_condition_df_alcohol$condition) <- contr.treatment(5, base = 1)

model4_expl4d <- lmer(rating_diff_switch_state1 ~ condition*group + (1 | ID), data = linreg_test_rating_group_condition_df_alcohol, REML = F, lmerControl(optimizer = "bobyqa"))

tab_model(model4_expl4d, transform = NULL, show.est = T, show.stat = T, show.df = T, df.method = "satterthwaite",  auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))

check_model(model4_expl4d, check=c("pp_check", "reqq", "qq"))
```

<!-- ##### Inspect effects per group (n.s.) -->

<!-- ```{r} -->
<!-- plot_model(model4_expl4d, type = "pred", terms = c("condition", "group"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- # get marginal means -->
<!-- mmeans <- emmeans(model4_expl4d, specs = ~ condition|group, ref="Transition revaluation", type="response") -->
<!-- mmeans -->

<!-- # contrasts between marginal means per group and version -->
<!-- contrasts <- contrast(mmeans, "trt.vs.ctrl", ref=1, adjust = NULL) -->
<!-- contrasts -->

<!-- # contrast between contrasts per group and version -->
<!-- contrast(contrasts, list(lowrisk_harmful = c(-1,0,0,0,1,0,0,0)), by=NULL) -->
<!-- ``` -->

#### Model 5_expl4b: Full dataset, compare against reward revaluation

```{r}
contrasts(linreg_test_rating_group_version_condition_df_full$condition) <- contr.treatment(5, base = 1)

model5_expl4d <- lmer(rating_diff_switch_state1 ~ group*version*condition +
                  (1 | ID),
                data = linreg_test_rating_group_version_condition_df_full,
                REML = F, lmerControl(optimizer = "bobyqa"))

tab_model(model5_expl4d, transform = NULL, show.est = T, show.stat = T, show.df = T, df.method = "satterthwaite",   auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))
```

##### Inspect interactions

<!-- ```{r} -->
<!-- plot_model(model5_expl4d, type = "pred", terms = c("condition", "group", "version"), bias_correction = F) + theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust=1)) -->
<!-- ``` -->

```{r}
# contrasts per group
mmeans <- emmeans(model5_expl4d, specs = ~ condition|group, ref="Reward revaluation", type="response")
mmeans

contrasts <- contrast(mmeans, 
                      list(goal_reward = c(-1, 1, 0, 0, 0),
                           control_reward = c(-1, 0, 0, 0, 1)),
                      adjust = "bonferroni")
contrasts

# contrasts per version
mmeans <- emmeans(model5_expl4d, specs = ~ condition|version, ref="Reward revaluation", type="response")
mmeans

contrasts <- contrast(mmeans, 
                      list(transition_reward = c(-1, 0, 1, 0, 0),
                           control_reward = c(-1, 0, 0, 0, 1)),
                      adjust = NULL)
contrasts


```

#### Model 3b: Full dataset, compare against control

```{r}
contrasts(linreg_test_rating_group_version_condition_df_full$condition) <- contr.treatment(5, base = 5)

model_control_expl4d <- lmer(rating_diff_switch_state1 ~ group*version*condition +
                  (1 | ID),
                data = linreg_test_rating_group_version_condition_df_full,
                REML = F, lmerControl(optimizer = "bobyqa"))

tab_model(model_control_expl4d, transform = NULL, show.est = T, show.stat = T, show.df = T, df.method = "satterthwaite",   auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))
```

##### Inspect interactions

```{r}
# contrasts per group
mmeans <- emmeans(model_control_expl4d, specs = ~ condition|group, ref="Reward revaluation", type="response")
mmeans

contrasts <- contrast(mmeans, 
                      list(reward_control = c(1, 0, 0, 0, -1),
                           policy_control = c(0, 0, 0, 1, -1)),
                      adjust = "bonferroni")
contrasts

# contrasts per version
mmeans <- emmeans(model_control_expl4d, specs = ~ condition|version, ref="Reward revaluation", type="response")
mmeans

contrasts <- contrast(mmeans, 
                      "trt.vs.ctrl", ref=5,
                      adjust = NULL)
contrasts


```

#### Relation rating score - test choices

```{r}
test_state1_df <- trial_df %>%
  filter(phase == "test",
         state == 1) %>%
  group_by(group, version, ID, condition) %>%
  summarise(percent_correct = mean(correct_path))

rating_diff_state1_df <- rating_df %>%
  group_by(group, version, ID, condition) %>%
  summarise(rating_diff_state1 = sum(rating_diff_state1, na.rm=T))

test_rating_state1_df <- merge(rating_diff_state1_df, test_state1_df, by = c("ID", "condition", "group", "version"))

test_rating_state1_df <- test_rating_state1_df %>%
  mutate(group = as.factor(group),
         version = as.factor(version),
         condition = as.factor(condition))
```

```{r}
# scatter plot
ggplot(test_rating_state1_df, aes(x=percent_correct*100, y=rating_diff_state1)) +
  geom_point() +
  geom_smooth() +
  xlab("% Correct paths") +
  ylab("Rating difference") +
  facet_grid(vars(group), vars(version)) +
  theme_light(base_size = 16)
```

```{r}
log_model_rating_correct <- lmer(rating_diff_state1 ~ percent_correct*group*version + (1 | ID), data = test_rating_state1_df)

tab_model(log_model_rating_correct, transform = NULL, show.est = T, show.stat = T, auto.label = FALSE, CSS = list(css.table = '+font-size: 14;'))
```
